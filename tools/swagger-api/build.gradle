buildscript {
    repositories {
        maven { url rupRepoExtUrl }
        ivy { url rupRepoReleaseUrl }
        if (project.hasProperty('developPlugins')) {
            ivy { url file(System.getProperty('user.home') + '/.ivylocal') }
        }
    }
    dependencies {
        classpath("com.copyright.rup.scm.gradle.plugins:rup-gradle-plugins:${rupGradlePluginsVersion}")
        classpath("org.openapitools:openapi-generator-gradle-plugin:${openapiGeneratorGradlePluginVersion}")
    }
}

repositories {
    maven { url rupRepoExtUrl }
}

apply plugin: 'rup-application'
apply plugin: 'org.openapi.generator'

openApiGenerate {
    generatorName = "spring"
    library = "spring-mvc"
    inputSpec = "$rootDir/src/docs/swagger/swagger.yaml".toString()
    outputDir = "$rootDir/../../dist-foreign-ui".toString()
    templateDir = "$rootDir/src/main/resources/templates".toString()
    configFile = "$rootDir/src/main/resources/swagger-config.json".toString()
    apiFilesConstrainedTo = [""]
    modelFilesConstrainedTo = [""]
    supportingFilesConstrainedTo = ["ApiUtil.java"]
}

tasks.openApiGenerate {
    doLast {
        delete (
                "$rootDir/../../dist-foreign-ui/src/main/java/org",
                "$rootDir/../../dist-foreign-ui/.openapi-generator",
                "$rootDir/../../dist-foreign-ui/.openapi-generator-ignore"
        )
    }
}
