<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-4.1.xsd
            http://camel.apache.org/schema/spring
            http://camel.apache.org/schema/spring/camel-spring-2.18.3.xsd">

    <import resource="classpath:/com/copyright/rup/dist/foreign/repository/dist-foreign-repository-context.xml"/>
    <import resource="classpath:/com/copyright/rup/dist/foreign/integration/dist-foreign-integration-context.xml"/>
    <import resource="classpath:/com/copyright/rup/dist/foreign/service/dist-foreign-performance-aspect-context.xml"/>

    <!--Transaction manager configuration-->
    <tx:annotation-driven transaction-manager="txManager"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dfDataSource"/>
    </bean>

    <context:component-scan base-package="com.copyright.rup.dist.foreign.service"/>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="$RUP{dist.foreign.service.schedule.core_pool_size}"/>
        <property name="maxPoolSize" value="$RUP{dist.foreign.service.schedule.max_pool_size}"/>
        <property name="queueCapacity" value="$RUP{dist.foreign.service.schedule.queue_capacity}"/>
    </bean>

    <task:scheduled-tasks>
        <task:scheduled ref="rightsholderService" method="updateRightsholders"
                        cron="$RUP{dist.foreign.service.schedule.rightsholder}"/>
    </task:scheduled-tasks>

    <task:annotation-driven executor="taskExecutor"/>

    <camelContext id="df.service.camelContext" xmlns="http://camel.apache.org/schema/spring">
        <contextScan/>
        <template id="df.service.consumerTemplate"/>

        <endpoint id="df.service.lm.detail.paid.endpoint" uri="$RUP{dist.foreign.service.lm.detail.paid.endpoint}"/>

        <route>
            <from ref="df.service.lm.detail.paid.endpoint"/>
            <choice>
                <when>
                    <simple>'FDA' == ${headers.source}</simple>
                    <log message="Consume paid usages from LM. Source=${headers.source}, Body: ${body}"
                         loggingLevel="DEBUG" logName="com.copyright.rup.dist"/>
                    <unmarshal>
                        <custom ref="df.service.paidUsageUnmarshaller"/>
                    </unmarshal>
                    <bean ref="df.service.paidUsageConsumer"/>
                </when>
            </choice>
        </route>
    </camelContext>
</beans>
