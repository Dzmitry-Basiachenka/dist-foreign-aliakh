dependencies {
    compile project(':dist-foreign-domain')
    compile project(':dist-foreign-repository')
    compile project(':dist-foreign-integration')

    compile("org.quartz-scheduler:quartz:${quartzVersion}")
    compile("org.springframework:spring-context-support:${rupJava.standardDependencies.spring.version}")
    compile("org.perf4j:perf4j:${perf4jVersion}")

    runtime("commons-jexl:commons-jexl:${jexlVersion}")
    runtime("org.aspectj:aspectjweaver:${aspectjVersion}")

    testCompile("com.copyright.rup.dist.common:dist-common-test:${distCommonVersion}")

    testIntegCompile("commons-io:commons-io:${commonsIoVersion}")
    testIntegRuntime project(path: ':dist-foreign-repository', configuration: 'testIntegRuntime')
    testIntegRuntime("com.copyright.rup.common:rup-common-config:${rupCommonConfigVersion}")
}

String pidLocation = "${projectDir}/build/tmp/embeddedPostgres/postgres.pid"

integrationTest.doFirst {
    systemProperty "dbPidLocation",pidLocation
}

//This hook used for closing PostgreSQL processes when integrationTest task was closed early
Runtime.runtime.addShutdownHook({
    File file = new File(pidLocation)
    if (file.exists()) {
        String pid = file.text
        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            Runtime.runtime.exec("Taskkill /PID " + pid + " /F")
        } else if (org.gradle.internal.os.OperatingSystem.current().isLinux() ||
                org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
            Runtime.runtime.exec("kill -9 " + pid)
        }
        file.deleteOnExit()
    }
})
