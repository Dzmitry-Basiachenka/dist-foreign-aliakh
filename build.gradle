buildscript {
    repositories {
        maven { url rupRepoExtUrl }
        ivy { url rupRepoReleaseUrl }
        if (project.hasProperty('developPlugins')) {
            ivy { url file(System.getProperty('user.home') + '/.ivylocal') }
        }
    }
    dependencies {
        classpath("com.copyright.rup.scm.gradle.plugins:rup-gradle-plugins:${rupGradlePluginsVersion}")
        classpath("com.devsoap.plugin:gradle-vaadin-plugin:${gradleVaadinPluginVersion}")
        classpath("com.google.guava:guava:${guavaVersion}")
        classpath("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
        classpath("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}")
    }
}

apply plugin: 'rup-java'
apply plugin: 'rup-idea'
apply plugin: 'org.sonarqube'

allprojects {
    group = 'com.copyright.rup.dist.foreign'

    //exclude to avoid vulnerability CVE-2024-21634 associated with 'software.amazon.ion:ion-java:1.0.2'
    configurations.all {
        exclude group: 'software.amazon.ion', module: 'ion-java'
    }
}

subprojects {
    def styleCheckConfigDir = rootProject.getProjectDir().getCanonicalPath() + '/tools/stylecheck/'
    checkstyle {
        configFile = file("${styleCheckConfigDir}checkstyle.xml")
        //This property will be used for suppressions location
        configProperties.suppressionsFile = styleCheckConfigDir + 'checkstyle-suppressions.xml'
        ignoreFailures = false
    }
    spotbugs {
        // Fail build if SpotBugs exceptions found
        ignoreFailures = false
        // Higher levels increase precision and find more bugs
        effort = "max"
        // Report all bugs
        reportLevel = "low"
        excludeFilter = file("${styleCheckConfigDir}spotbugs_excludes.xml")
    }

    // Enabling pmd fail on error (disabled by rup-plugin)
    pmd {
        ignoreFailures = false
        ruleSetFiles = files("${styleCheckConfigDir}pmd_rules.xml")
        ruleSets = []
    }
    [pmdMain, pmdTest, pmdTestInteg]*.ignoreFailures = false

    tasks.test {
        maxHeapSize = '2G'
    }

    tasks.test.rupCodeCoverage {
        preInstrument = true
    }

    tasks.withType(Test) {
        systemProperty "user.timezone", "America/New_York"
    }
}
