<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://camel.apache.org/schema/spring
           http://camel.apache.org/schema/spring/camel-spring-2.18.3.xsd">

    <import resource="classpath:/com/copyright/rup/common/config/rup-properties-config.xml"/>
    <import resource="classpath:/com/copyright/rup/dist/common/integration/rest/prm/prm-rollup-context.xml"/>
    <import resource="classpath:/com/copyright/rup/dist/common/integration/rest/prm/prm-rh-preference-context.xml"/>
    <import resource="classpath:/com/copyright/rup/dist/foreign/integration/dist-foreign-broker-config.xml"/>

    <bean id="applicationName" class="java.lang.String">
        <constructor-arg value="dist.foreign"/>
    </bean>

    <context:component-scan base-package="com.copyright.rup.dist.foreign.integration"/>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>

    <bean id="asyncRequestFactory" class="org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory">
        <property name="connectionRequestTimeout" value="$RUP{dist.foreign.integration.async.rest.factory.connection.request.timeout}"/>
        <property name="connectTimeout" value="$RUP{dist.foreign.integration.async.rest.factory.connect.timeout}"/>
        <property name="readTimeout" value="$RUP{dist.foreign.integration.async.rest.factory.read.timeout}"/>
    </bean>

    <bean id="asyncRestTemplate" class="org.springframework.web.client.AsyncRestTemplate">
        <constructor-arg ref="asyncRequestFactory"/>
    </bean>

    <bean id="dist.common.integration.prmRightsholderService"
          class="com.copyright.rup.dist.common.integration.rest.prm.PrmRightsholderService">
        <constructor-arg value="$RUP{dist.common.integration.rest.prm.url}"/>
        <constructor-arg ref="restTemplate"/>
    </bean>

    <bean id="dist.common.integration.rmsService" class="com.copyright.rup.dist.common.integration.rest.rms.RmsService">
        <constructor-arg ref="restTemplate"/>
        <constructor-arg value="$RUP{dist.foreign.integration.rest.rms.url}"/>
        <constructor-arg value="$RUP{dist.foreign.integration.rest.rms.request_partition_size}"/>
        <constructor-arg value="true"/>
    </bean>

    <bean id="dist.common.integration.rmsAsyncService" class="com.copyright.rup.dist.common.integration.rest.rms.RmsAsyncService">
        <constructor-arg ref="restTemplate"/>
        <constructor-arg ref="asyncRestTemplate"/>
        <constructor-arg value="$RUP{dist.foreign.integration.rest.rms.url}"/>
        <constructor-arg value="$RUP{dist.foreign.integration.rest.rms.request_partition_size}"/>
        <constructor-arg value="true"/>
    </bean>

    <bean id="df.integration.externalUsageProducer"
          class="com.copyright.rup.dist.foreign.integration.lm.impl.producer.ExternalUsageProducer">
        <property name="endPoint" value="direct:df.integration.externalUsage"/>
    </bean>

    <camelContext id="df.integration.camelContext" xmlns="http://camel.apache.org/schema/spring">
        <contextScan/>
        <template id="df.integration.producerTemplate"/>

        <endpoint id="df.integration.internal.usage.endpoint" uri="direct:df.integration.externalUsage"/>
        <endpoint id="df.integration.lm.detail.endpoint" uri="$RUP{dist.foreign.integration.lm.detail.endpoint}"/>

        <redeliveryPolicyProfile id="defaultRedeliveryPolicy"
                                 maximumRedeliveries="10"
                                 redeliveryDelay="60000"/> <!-- 1 min -->

        <route>
            <from ref="df.integration.internal.usage.endpoint"/>
            <marshal>
                <custom ref="df.integration.externalUsageMarshaller"/>
            </marshal>
            <to ref="df.integration.lm.detail.endpoint"/>
        </route>
    </camelContext>
</beans>
