<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IUdmUsageMapper">

    <resultMap id="udmUsageResultMap" type="UdmUsage" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_udm_usage_uid"/>
        <result property="batchId" column="df_udm_usage_batch_uid"/>
        <result property="originalDetailId" column="original_detail_id"/>
        <result property="periodEndDate" column="period_end_date"/>
        <result property="status" column="status_ind"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="reportedTitle" column="reported_title"/>
        <result property="reportedStandardNumber" column="reported_standard_number"/>
        <result property="reportedPubType" column="reported_pub_type"/>
        <result property="pubFormat" column="publication_format"/>
        <result property="article" column="article"/>
        <result property="language" column="language"/>
        <result property="companyId" column="company_id"/>
        <result property="surveyRespondent" column="survey_respondent"/>
        <result property="ipAddress" column="ip_address"/>
        <result property="surveyCountry" column="survey_country"/>
        <result property="usageDate" column="usage_date"/>
        <result property="surveyStartDate" column="survey_start_date"/>
        <result property="surveyEndDate" column="survey_end_date"/>
        <result property="reportedTypeOfUse" column="reported_type_of_use"/>
        <result property="quantity" column="quantity"/>
        <result property="ineligibleReason" column="ineligible_reason"/>
    </resultMap>

    <resultMap id="udmUsageDtoResultMap" type="UdmUsageDto" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_udm_usage_uid"/>
        <result property="period" column="period"/>
        <result property="usageOrigin" column="usage_origin"/>
        <result property="channel" column="channel"/>
        <result property="status" column="status_ind"/>
        <result property="originalDetailId" column="original_detail_id"/>
        <result property="periodEndDate" column="period_end_date"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="reportedTitle" column="reported_title"/>
        <result property="reportedStandardNumber" column="reported_standard_number"/>
        <result property="reportedPubType" column="reported_pub_type"/>
        <result property="pubFormat" column="publication_format"/>
        <result property="article" column="article"/>
        <result property="language" column="language"/>
        <result property="companyId" column="company_id"/>
        <result property="surveyRespondent" column="survey_respondent"/>
        <result property="ipAddress" column="ip_address"/>
        <result property="surveyCountry" column="survey_country"/>
        <result property="usageDate" column="usage_date"/>
        <result property="surveyStartDate" column="survey_start_date"/>
        <result property="surveyEndDate" column="survey_end_date"/>
        <result property="reportedTypeOfUse" column="reported_type_of_use"/>
        <result property="quantity" column="quantity"/>
        <result property="ineligibleReason" column="ineligible_reason"/>
    </resultMap>

    <insert id="insert" parameterType="UdmUsage">
        insert into ${schema}.df_udm_usage (
            df_udm_usage_uid,
            df_udm_usage_batch_uid,
            original_detail_id,
            period_end_date,
            status_ind,
            wr_wrk_inst,
            reported_title,
            reported_standard_number,
            reported_pub_type,
            publication_format,
            article,
            language,
            company_id,
            survey_respondent,
            ip_address,
            survey_country,
            usage_date,
            survey_start_date,
            survey_end_date,
            reported_type_of_use,
            quantity,
            ineligible_reason,
            <include refid="StoredEntityMapper.additionalColumns"/>
        ) values (
            #{id},
            #{batchId},
            #{originalDetailId},
            #{periodEndDate},
            #{status},
            #{wrWrkInst},
            #{reportedTitle},
            #{reportedStandardNumber},
            #{reportedPubType},
            #{pubFormat},
            #{article},
            #{language},
            #{companyId},
            #{surveyRespondent},
            #{ipAddress},
            #{surveyCountry},
            #{usageDate},
            #{surveyStartDate},
            #{surveyEndDate},
            #{reportedTypeOfUse},
            #{quantity},
            #{ineligibleReason},
            <include refid="StoredEntityMapper.insert"/>
        )
    </insert>

    <select id="isOriginalDetailIdExist" parameterType="string" resultType="boolean">
        select exists (
            select 1
            from ${schema}.df_udm_usage
            where original_detail_id = #{originalDetailId}
        )
    </select>

    <select id="findDtosByFilter" resultMap="udmUsageDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        select
            df_udm_usage_uid,
            ub.period,
            ub.usage_origin,
            ub.channel,
            original_detail_id,
            period_end_date,
            status_ind,
            wr_wrk_inst,
            reported_title,
            reported_standard_number,
            reported_pub_type,
            publication_format,
            article,
            language,
            company_id,
            survey_respondent,
            ip_address,
            survey_country,
            usage_date,
            survey_start_date,
            survey_end_date,
            reported_type_of_use,
            quantity,
            ineligible_reason,
            u.created_datetime,
            u.updated_datetime,
            u.created_by_user,
            u.updated_by_user
        from ${schema}.df_udm_usage u
        join ${schema}.df_udm_usage_batch ub on u.df_udm_usage_batch_uid = ub.df_udm_usage_batch_uid
        order by
        <choose>
            <when test="null != sort">
                <include refid="IUdmUsageMapper.udmChooseSortProperty"/>
            </when>
            <otherwise>
                updated_datetime desc
            </otherwise>
        </choose>,
        df_udm_usage_uid
        <include refid="IUsageMapper.ifPageable"/>
    </select>

    <sql id="udmChooseSortProperty">
        <choose>
            <when test="sort.property == 'detailId'">
                df_udm_usage_uid <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'period'">
                ub.period <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'usageOrigin'">
                ub.usage_origin <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'usageDetailId'">
                original_detail_id <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'status'">
                status_ind <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'reportedTitle'">
                reported_title <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'wrWrkInst'">
                wr_wrk_inst <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'reportedStandardNumber'">
                reported_standard_number <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'reportedPubType'">
                reported_publication_type <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'publicationFormat'">
                publication_format <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'article'">
                article <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'language'">
                language <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'companyId'">
                company_id <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'surveyRespondent'">
                survey_respondent <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'ipAddress'">
                ip_address <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'surveyCountry'">
                survey_country <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'channel'">
                ub.channel <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'usageDate'">
                usage_date <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'surveyStartDate'">
                survey_start_date <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'surveyEndDate'">
                survey_end_date <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'reportedTypeOfUse'">
                reported_type_of_use <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'quantity'">
                quantity <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'ineligibleReason'">
                ineligible_reason <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'createDate'">
                u.created_datetime <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'updateDate'">
                u.updated_datetime <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'updateUser'">
                u.updated_by_user <include refid="IUsageMapper.direction"/>
            </when>
        </choose>
    </sql>

    <select id="findCountByFilter" parameterType="map" resultType="int">
        select count(1)
        from ${schema}.df_udm_usage u
    </select>

    <select id="findByIds" resultMap="udmUsageResultMap">
        select
            df_udm_usage_uid,
            df_udm_usage_batch_uid,
            original_detail_id,
            period_end_date,
            status_ind,
            wr_wrk_inst,
            reported_title,
            reported_standard_number,
            reported_pub_type,
            publication_format,
            article,
            language,
            company_id,
            survey_respondent,
            ip_address,
            survey_country,
            usage_date,
            survey_start_date,
            survey_end_date,
            reported_type_of_use,
            quantity,
            ineligible_reason
        from ${schema}.df_udm_usage
        where df_udm_usage_uid in
            <foreach collection="list" item="usageId" open="(" separator="," close=")">
                #{usageId}
            </foreach>
        order by df_udm_usage_batch_uid
    </select>
</mapper>
