<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IUsageMapper">

    <resultMap id="usageDtoResultMap" type="UsageDto" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_usage_uid"/>
        <result property="detailId" column="detail_id"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="workTitle" column="work_title"/>
        <result property="rhAccountNumber" column="rh_account_number"/>
        <result property="rhName" column="rh_name"/>
        <result property="status" column="status_ind"/>
        <result property="article" column="article"/>
        <result property="standardNumber" column="standard_number"/>
        <result property="publisher" column="publisher"/>
        <result property="publicationDate" column="publication_date"/>
        <result property="market" column="market"/>
        <result property="marketPeriodFrom" column="market_period_from"/>
        <result property="marketPeriodTo" column="market_period_to"/>
        <result property="author" column="author"/>
        <result property="numberOfCopies" column="number_of_copies"/>
        <result property="reportedValue" column="reported_value"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="batchGrossAmount" column="batch_gross_amount"/>
        <result property="batchName" column="name"/>
        <result property="rroAccountNumber" column="rro_account_number"/>
        <result property="rroName" column="rro_name"/>
        <result property="paymentDate" column="payment_date"/>
        <result property="fiscalYear" column="fiscal_year"/>
    </resultMap>

    <resultMap id="usageAmountResultMap" type="Usage" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_usage_uid"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
        <result property="reportedValue" column="reported_value"/>
    </resultMap>

    <resultMap id="rightsholderTotalsHolderResultMap" type="RightsholderTotalsHolder">
        <result property="rightsholderName" column="name"/>
        <result property="rightsholderAccountNumber" column="rh_account_number"/>
        <result property="grossTotal" column="gross_total"/>
        <result property="serviceFeeTotal" column="service_fee_total"/>
        <result property="netTotal" column="net_total"/>
    </resultMap>

    <resultMap id="usageResultMap" type="Usage" extends="usageAmountResultMap">
        <result property="detailId" column="detail_id"/>
        <result property="batchId" column="df_usage_batch_uid"/>
        <result property="scenarioId" column="df_scenario_uid"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="workTitle" column="work_title"/>
        <result property="rightsholder.accountNumber" column="rh_account_number"/>
        <result property="rightsholder.name" column="rh_name"/>
        <result property="status" column="status_ind"/>
        <result property="article" column="article"/>
        <result property="standardNumber" column="standard_number"/>
        <result property="publisher" column="publisher"/>
        <result property="publicationDate" column="publication_date"/>
        <result property="market" column="market"/>
        <result property="marketPeriodFrom" column="market_period_from"/>
        <result property="marketPeriodTo" column="market_period_to"/>
        <result property="author" column="author"/>
        <result property="numberOfCopies" column="number_of_copies"/>
    </resultMap>

    <sql id="usageColumns">
        df_usage_uid,
        df_usage_batch_uid,
        df_scenario_uid,
        detail_id,
        wr_wrk_inst,
        work_title,
        rh_account_number,
        status_ind,
        article,
        standard_number,
        publisher,
        publication_date,
        market,
        market_period_from,
        market_period_to,
        author,
        number_of_copies,
        reported_value,
        gross_amount
    </sql>

    <sql id="usageFilter">
        <where>
            <if test="filter.usageBatchesIds.size() > 0">
                and
                <foreach collection="filter.usageBatchesIds" item="usageBatchId" open="(" separator=" or " close=")">
                    ub.df_usage_batch_uid = #{usageBatchId}
                </foreach>
            </if>
            <if test="filter.rhAccountNumbers.size() > 0">
                and
                <foreach collection="filter.rhAccountNumbers" item="rhAccountNumber" open="(" separator=" or " close=")">
                    ub.rro_account_number = #{rhAccountNumber}
                </foreach>
            </if>
            <if test="null != filter.paymentDate">
                and <![CDATA[ub.payment_date <= #{filter.paymentDate}]]>
            </if>
            <if test="null != filter.usageStatus">
                and u.status_ind = #{filter.usageStatus}
            </if>
            <if test="null != filter.fiscalYear">
                and <![CDATA[ub.fiscal_year <= #{filter.fiscalYear}]]>
            </if>
        </where>
    </sql>

    <sql id="direction">
        <choose>
            <when test="sort.direction == 'asc'">
                asc
            </when>
            <otherwise>
                desc
            </otherwise>
        </choose>
    </sql>

    <sql id="usageFilterOrderBy">
        order by
        <choose>
            <when test="null != sort">
                <choose>
                    <when test="sort.property == 'detailId'">
                        u.detail_id <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'batchName'">
                        ub.name <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'fiscalYear'">
                        ub.fiscal_year <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'rroAccountNumber'">
                        ub.rro_account_number <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'rroName'">
                        rro.name <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'paymentDate'">
                        ub.payment_date <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'workTitle'">
                        u.work_title <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'article'">
                        u.article <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'standardNumber'">
                        u.standard_number <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'wrWrkInst'">
                        u.wr_wrk_inst <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'rhAccountNumber'">
                        u.rh_account_number <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'rhName'">
                        rh.name <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'publisher'">
                        u.publisher <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'publicationDate'">
                        u.publication_date <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'numberOfCopies'">
                        u.number_of_copies <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'reportedValue'">
                        u.reported_value <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'grossAmount'">
                        u.gross_amount <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'market'">
                        u.market <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'marketPeriodFrom'">
                        u.market_period_from <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'marketPeriodTo'">
                        u.market_period_to <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'author'">
                        u.author <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'status'">
                        u.status_ind <include refid="direction"/>
                    </when>
                </choose>
            </when>
            <otherwise>
                updated_datetime desc
            </otherwise>
        </choose>
    </sql>

    <sql id="rightsholderTotalHoldersOrderBy">
        order by
        <choose>
            <when test="null != sort">
                <choose>
                    <when test="sort.property == 'rightsholderName'">
                        r.name <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'rightsholderAccountNumber'">
                        u.rh_account_number <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'grossTotal'">
                        u.gross_total <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'serviceFeeTotal'">
                        u.service_fee_total <include refid="direction"/>
                    </when>
                    <when test="sort.property == 'netTotal'">
                        u.net_total <include refid="direction"/>
                    </when>
                </choose>
            </when>
            <otherwise>
                r.name asc
            </otherwise>
        </choose>
    </sql>

    <sql id="searchWhereClause">
        upper(r.name) like '%' || upper(#{searchValue}) || '%' or
        cast(u.rh_account_number as text) like '%' || #{searchValue} || '%'
    </sql>

    <insert id="insert" parameterType="Usage">
        insert into ${schema}.df_usage(
            <include refid="usageColumns"/>,
            <include refid="StoredEntityMapper.additionalColumns"/>)
        values(
            #{id},
            #{batchId},
            #{scenarioId},
            #{detailId},
            #{wrWrkInst},
            #{workTitle},
            #{rightsholder.accountNumber},
            #{status},
            #{article},
            #{standardNumber},
            #{publisher},
            #{publicationDate},
            #{market},
            #{marketPeriodFrom},
            #{marketPeriodTo},
            #{author},
            #{numberOfCopies},
            #{reportedValue},
            #{grossAmount},
            <include refid="StoredEntityMapper.insert"/>
        )
    </insert>

    <select id="findByFilter" resultMap="usageDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        select
            u.df_usage_uid,
            u.df_scenario_uid,
            u.detail_id,
            u.wr_wrk_inst,
            u.work_title,
            u.rh_account_number,
            rh.name rh_name,
            u.status_ind,
            u.article,
            u.standard_number,
            u.publisher,
            u.publication_date,
            u.market,
            u.market_period_from,
            u.market_period_to,
            u.author,
            u.number_of_copies,
            u.reported_value,
            u.gross_amount,
            ub.gross_amount batch_gross_amount,
            ub.name,
            ub.rro_account_number,
            rro.name rro_name,
            ub.payment_date,
            ub.fiscal_year,
            u.record_version,
            u.created_by_user,
            u.created_datetime,
            u.updated_by_user,
            u.updated_datetime
        from ${schema}.df_usage u
        join ${schema}.df_usage_batch ub on u.df_usage_batch_uid = ub.df_usage_batch_uid
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = u.rh_account_number
        left join ${schema}.df_rightsholder rro on rro.rh_account_number = ub.rro_account_number
        <include refid="usageFilter"/>
        <include refid="usageFilterOrderBy"/>
        <if test="null != pageable">
            limit #{pageable.limit}
            offset #{pageable.offset}
        </if>
    </select>

    <select id="getCountByFilter" parameterType="map" resultType="int">
        select count(1)
        from ${schema}.df_usage u
        join ${schema}.df_usage_batch ub on u.df_usage_batch_uid = ub.df_usage_batch_uid
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = u.rh_account_number
        left join ${schema}.df_rightsholder rro on rro.rh_account_number = ub.rro_account_number
        <include refid="usageFilter"/>
    </select>

    <select id="findByDetailId" resultMap="usageResultMap" parameterType="long">
        select
            u.df_usage_uid,
            u.df_usage_batch_uid,
            u.df_scenario_uid,
            u.detail_id,
            u.wr_wrk_inst,
            u.work_title,
            u.rh_account_number,
            r.name rh_name,
            u.status_ind,
            u.article,
            u.standard_number,
            u.publisher,
            u.publication_date,
            u.market,
            u.market_period_from,
            u.market_period_to,
            u.author,
            u.number_of_copies,
            u.reported_value,
            u.gross_amount,
            u.net_amount,
            u.created_datetime,
            u.updated_datetime,
            u.created_by_user,
            u.updated_by_user,
            u.record_version
        from ${schema}.df_usage u
        left join ${schema}.df_rightsholder r on r.rh_account_number = u.rh_account_number
        where u.detail_id = #{detailId}
    </select>

    <delete id="deleteUsages" parameterType="string">
        delete from ${schema}.df_usage
        where df_usage_batch_uid = #{batchId}
    </delete>

    <select id="findWithAmounts" parameterType="map" resultMap="usageAmountResultMap">
        select
            u.df_usage_uid,
            u.gross_amount,
            u.net_amount,
            u.reported_value,
            u.created_datetime,
            u.updated_datetime,
            u.created_by_user,
            u.updated_by_user,
            u.record_version
        from ${schema}.df_usage u
        join ${schema}.df_usage_batch ub on u.df_usage_batch_uid = ub.df_usage_batch_uid
        <include refid="usageFilter"/>
    </select>

    <update id="addToScenario" parameterType="map">
        update
            ${schema}.df_usage
        set
            status_ind = #{status},
            df_scenario_uid = #{scenarioId},
            <include refid="StoredEntityMapper.update"/>
        where df_usage_uid in (
            <foreach collection="usageIds" item="usageId" separator=", ">
                #{usageId}
            </foreach>
        )
    </update>

    <update id="deleteFromScenario" parameterType="map">
        update
            ${schema}.df_usage
        set
            status_ind = #{status},
            df_scenario_uid = null,
            <include refid="StoredEntityMapper.update"/>
        where df_scenario_uid = #{scenarioId}
    </update>

    <select id="getDuplicateDetailIds" parameterType="list" resultType="long">
        select distinct detail_id
        from ${schema}.df_usage
        where detail_id in (
            <foreach collection="collection" item="detailId" separator=", ">
                #{detailId}
            </foreach>
        )
        union
        select distinct detail_id
        from ${schema}.df_usage_archive
        where detail_id in (
            <foreach collection="collection" item="detailId" separator=", ">
                #{detailId}
            </foreach>
        )
    </select>

    <select id="getRightsholderTotalsHoldersByScenarioId" parameterType="map" resultMap="rightsholderTotalsHolderResultMap">
        select
            r.name,
            u.rh_account_number,
            u.gross_total,
            u.service_fee_total,
            u.net_total
        from (
            select
                rh_account_number,
                sum(gross_amount) gross_total,
                sum(service_fee_amount) service_fee_total,
                sum(net_amount) net_total
            from ${schema}.df_usage
            where df_scenario_uid = #{scenarioId}
            group by rh_account_number) u
        left join ${schema}.df_rightsholder r on u.rh_account_number = r.rh_account_number
        <if test="null != searchValue">
            where <include refid="searchWhereClause"/>
        </if>
        <include refid="rightsholderTotalHoldersOrderBy"/>
        <if test="null != pageable">
            limit #{pageable.limit}
            offset #{pageable.offset}
        </if>
    </select>

    <select id="getRightsholderTotalsHolderCountByScenarioId" parameterType="map" resultType="int">
        select count(1)
        from (
            select distinct rh_account_number
            from ${schema}.df_usage
            where df_scenario_uid = #{scenarioId}) u
        left join ${schema}.df_rightsholder r on u.rh_account_number = r.rh_account_number
        <if test="null != searchValue">
            where <include refid="searchWhereClause"/>
        </if>
    </select>
</mapper>
