<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IUdmBatchMapper">

    <resultMap id="udmBatchResultMap" type="UdmBatch" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_udm_usage_batch_uid"/>
        <result property="name" column="name"/>
        <result property="period" column="period"/>
        <result property="usageOrigin" column="usage_origin"/>
        <result property="channel" column="channel"/>
    </resultMap>

    <sql id="udmBatchColumns">
        df_udm_usage_batch_uid,
        name,
        period,
        usage_origin,
        channel,
        <include refid="StoredEntityMapper.additionalColumns"/>
    </sql>

    <insert id="insert" parameterType="UdmBatch">
        insert into ${schema}.df_udm_usage_batch (
            <include refid="udmBatchColumns"/>
        ) values (
            #{id},
            #{name},
            #{period},
            #{usageOrigin},
            #{channel},
            <include refid="StoredEntityMapper.insert"/>
        )
    </insert>

    <select id="findById" resultMap="udmBatchResultMap" parameterType="string">
        select
            <include refid="udmBatchColumns"/>
        from ${schema}.df_udm_usage_batch
        where df_udm_usage_batch_uid = #{udmBatchId}
    </select>

    <select id="findAll" resultMap="udmBatchResultMap">
        select
            <include refid="udmBatchColumns"/>
        from ${schema}.df_udm_usage_batch
        order by updated_datetime desc
    </select>

    <select id="batchExists" parameterType="string" resultType="boolean">
        select exists (
            select 1
            from ${schema}.df_udm_usage_batch
            where name = #{name}
        )
    </select>

    <select id="isUdmBatchProcessingCompleted" resultType="boolean" parameterType="map">
        select not exists (
            select 1
            from ${schema}.df_udm_usage
            where df_udm_usage_batch_uid = #{udmBatchId}
                and status_ind in
                <foreach collection="statuses" item="status" separator="," open="(" close=")">
                    #{status}
                </foreach>
        )
    </select>

    <select id="isUdmBatchContainsBaselineUsages" resultType="boolean" parameterType="string">
        select exists (
            select 1
            from ${schema}.df_udm_usage
            where df_udm_usage_batch_uid = #{udmBatchId}
                and is_baseline_flag = true
        )
    </select>

    <delete id="deleteById">
        delete from ${schema}.df_udm_usage_batch
        where df_udm_usage_batch_uid = #{udmBatchId}
    </delete>

    <select id="findPeriods" resultType="int">
        select distinct period
        from ${schema}.df_udm_usage_batch
        order by period desc
    </select>
</mapper>
