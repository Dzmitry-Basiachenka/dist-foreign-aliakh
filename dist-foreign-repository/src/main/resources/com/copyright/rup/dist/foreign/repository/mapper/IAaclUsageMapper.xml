<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IAaclUsageMapper">

    <resultMap id="aaclUsageResultMap" type="Usage" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_usage_uid"/>
        <result property="batchId" column="df_usage_batch_uid"/>
        <result property="scenarioId" column="df_scenario_uid"/>
        <result property="status" column="status_ind"/>
        <result property="productFamily" column="product_family"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="rightsholder.id" column="rh_id"/>
        <result property="rightsholder.accountNumber" column="rh_account_number"/>
        <result property="rightsholder.name" column="rh_name"/>
        <result property="systemTitle" column="system_title"/>
        <result property="standardNumber" column="standard_number"/>
        <result property="standardNumberType" column="standard_number_type"/>
        <result property="numberOfCopies" column="number_of_copies"/>
        <result property="comment" column="comment"/>
        <result property="aaclUsage.institution" column="institution"/>
        <result property="aaclUsage.usagePeriod" column="usage_period"/>
        <result property="aaclUsage.usageSource" column="usage_source"/>
        <result property="aaclUsage.numberOfPages" column="number_of_pages"/>
        <result property="aaclUsage.rightLimitation" column="right_limitation"/>
        <result property="aaclUsage.batchPeriodEndDate" column="batch_period_end_date"/>
        <result property="aaclUsage.discipline" column="discipline"/>
        <result property="aaclUsage.enrollmentProfile" column="enrollment_profile"/>
        <result property="aaclUsage.publicationType.id" column="pub_type_id"/>
        <result property="aaclUsage.publicationType.name" column="pub_type_name"/>
        <result property="aaclUsage.originalPublicationType" column="original_publication_type"/>
        <result property="aaclUsage.detailLicenseeClassId" column="detail_licensee_class_id"/>
        <result property="aaclUsage.publicationTypeWeight" column="publication_type_weight"/>
        <result property="aaclUsage.baselineId" column="baseline_uid"/>
    </resultMap>

    <resultMap id="aaclUsageDtoResultMap" type="UsageDto" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_usage_uid"/>
        <result property="batchName" column="batch_name"/>
        <result property="status" column="status_ind"/>
        <result property="productFamily" column="product_family"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="rhAccountNumber" column="rh_account_number"/>
        <result property="rhName" column="rh_name"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="serviceFeeAmount" column="service_fee_amount"/>
        <result property="netAmount" column="net_amount"/>
        <result property="payeeAccountNumber" column="payee_account_number"/>
        <result property="payeeName" column="payee_name"/>
        <result property="periodEndDate" column="period_end_date"/>
        <result property="scenarioName" column="scenario_name"/>
        <result property="checkNumber" column="check_number"/>
        <result property="checkDate" column="check_date"/>
        <result property="cccEventId" column="ccc_event_id"/>
        <result property="distributionName" column="distribution_name"/>
        <result property="distributionDate" column="distribution_date"/>
        <result property="systemTitle" column="system_title"/>
        <result property="standardNumber" column="standard_number"/>
        <result property="standardNumberType" column="standard_number_type"/>
        <result property="numberOfCopies" column="number_of_copies"/>
        <result property="comment" column="comment"/>
        <result property="aaclUsage.institution" column="institution"/>
        <result property="aaclUsage.usagePeriod" column="usage_period"/>
        <result property="aaclUsage.usageSource" column="usage_source"/>
        <result property="aaclUsage.numberOfPages" column="number_of_pages"/>
        <result property="aaclUsage.rightLimitation" column="right_limitation"/>
        <result property="aaclUsage.batchPeriodEndDate" column="batch_period_end_date"/>
        <result property="aaclUsage.discipline" column="discipline"/>
        <result property="aaclUsage.enrollmentProfile" column="enrollment_profile"/>
        <result property="aaclUsage.publicationType.id" column="pub_type_id"/>
        <result property="aaclUsage.publicationType.name" column="pub_type_name"/>
        <result property="aaclUsage.originalPublicationType" column="original_publication_type"/>
        <result property="aaclUsage.detailLicenseeClassId" column="detail_licensee_class_id"/>
        <result property="aaclUsage.publicationTypeWeight" column="publication_type_weight"/>
        <result property="aaclUsage.baselineId" column="baseline_uid"/>
    </resultMap>

    <sql id="aaclUsageColumns">
        u.df_usage_uid,
        u.df_usage_batch_uid,
        u.df_scenario_uid,
        u.wr_wrk_inst,
        u.system_title,
        u.standard_number,
        u.standard_number_type,
        u.rh_account_number,
        rh.name rh_name,
        rh.df_rightsholder_uid rh_id,
        u.status_ind,
        u.product_family,
        u.number_of_copies,
        u.comment,
        ub.payment_date batch_period_end_date,
        uaacl.institution,
        uaacl.usage_period,
        uaacl.usage_source,
        uaacl.number_of_pages,
        uaacl.right_limitation,
        uaacl.detail_licensee_class_id,
        uaacl.baseline_uid,
        dlc.discipline,
        dlc.enrollment_profile,
        uaacl.original_publication_type,
        pt.df_publication_type_uid pub_type_id,
        pt.name pub_type_name,
        uaacl.publication_type_weight,
        u.created_datetime,
        u.updated_datetime,
        u.created_by_user,
        u.updated_by_user,
        u.record_version
    </sql>


    <sql id="selectCountForAuditSql">
        select
        <choose>
            <when test="null != filter.cccEventId || null != filter.distributionName">
                <include refid="IAaclUsageMapper.selectArchivedCountForAuditSql"/>
            </when>
            <otherwise>
                (select count(1) usage_count
                from ${schema}.df_usage u
                join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
                join ${schema}.df_usage_batch ub on ub.df_usage_batch_uid = u.df_usage_batch_uid
                left join ${schema}.df_scenario s on s.df_scenario_uid = u.df_scenario_uid
                <where>
                    <include refid="IAaclUsageMapper.aaclAuditFilterWhereClause">
                        <property name="detail_uid" value="u.df_usage_uid"/>
                    </include>
                </where>) +
                <include refid="IAaclUsageMapper.selectArchivedCountForAuditSql"/>
            </otherwise>
        </choose>
    </sql>

    <sql id="selectArchivedCountForAuditSql">
        (select count(1) usage_count
        from ${schema}.df_usage_archive u
        join ${schema}.df_usage_aacl uaacl on u.df_usage_archive_uid = uaacl.df_usage_aacl_uid
        left join ${schema}.df_usage_batch ub on ub.df_usage_batch_uid = u.df_usage_batch_uid
        left join ${schema}.df_scenario s on s.df_scenario_uid = u.df_scenario_uid
        <include refid="IAaclUsageMapper.archivedAaclAuditFilterWhereClause"/>)
    </sql>

    <sql id="selectForAuditSql">
        <choose>
            <when test="null != filter.cccEventId || null != filter.distributionName">
                <include refid="IAaclUsageMapper.selectArchivedUsagesForAuditSql"/>
            </when>
            <otherwise>
                select
                    u.df_usage_uid,
                    u.status_ind,
                    u.product_family,
                    u.df_usage_batch_uid,
                    ub.name batch_name,
                    ub.payment_date batch_period_end_date,
                    u.rh_account_number,
                    rh.name rh_name,
                    u.payee_account_number,
                    payee.name payee_name,
                    wr_wrk_inst,
                    system_title,
                    standard_number,
                    standard_number_type,
                    u.gross_amount,
                    u.net_amount,
                    service_fee_amount,
                    u.updated_datetime,
                    s.name scenario_name,
                    null check_number,
                    null check_date,
                    null ccc_event_id,
                    null distribution_name,
                    null distribution_date,
                    null period_end_date,
                    u.comment,
                    uaacl.baseline_uid,
                    uaacl.usage_period,
                    uaacl.usage_source,
                    uaacl.number_of_pages,
                    uaacl.detail_licensee_class_id,
                    pt.name pub_type_name,
                    dlc.discipline,
                    dlc.enrollment_profile
                from ${schema}.df_usage u
                join ${schema}.df_usage_batch ub on ub.df_usage_batch_uid = u.df_usage_batch_uid
                left join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
                left join ${schema}.df_publication_type pt on uaacl.df_publication_type_uid = pt.df_publication_type_uid
                left join ${schema}.df_detail_licensee_class dlc on uaacl.detail_licensee_class_id = dlc.detail_licensee_class_id
                left join ${schema}.df_rightsholder rh on rh.rh_account_number = u.rh_account_number
                left join ${schema}.df_rightsholder payee on payee.rh_account_number = u.payee_account_number
                left join ${schema}.df_scenario s on s.df_scenario_uid = u.df_scenario_uid
                <where>
                    <include refid="IAaclUsageMapper.aaclAuditFilterWhereClause">
                        <property name="detail_uid" value="u.df_usage_uid"/>
                    </include>
                </where>
                union
                <include refid="IAaclUsageMapper.selectArchivedUsagesForAuditSql"/>
            </otherwise>
        </choose>
        order by
        <choose>
            <when test="null != sort">
                <choose>
                    <when test="sort.property == 'detailId'">
                        df_usage_uid
                    </when>
                    <when test="sort.property == 'baselineId'">
                        baseline_uid
                    </when>
                    <when test="sort.property == 'status'">
                        status_ind
                    </when>
                    <when test="sort.property == 'productFamily'">
                        product_family
                    </when>
                    <when test="sort.property == 'batchName'">
                        batch_name
                    </when>
                    <when test="sort.property == 'batchPeriodEndDate'">
                        batch_period_end_date
                    </when>
                    <when test="sort.property == 'rhAccountNumber'">
                        rh_account_number
                    </when>
                    <when test="sort.property == 'rhName'">
                        rh_name
                    </when>
                    <when test="sort.property == 'payeeAccountNumber'">
                        payee_account_number
                    </when>
                    <when test="sort.property == 'payeeName'">
                        payee_name
                    </when>
                    <when test="sort.property == 'wrWrkInst'">
                        wr_wrk_inst
                    </when>
                    <when test="sort.property == 'systemTitle'">
                        system_title
                    </when>
                    <when test="sort.property == 'standardNumber'">
                        standard_number
                    </when>
                    <when test="sort.property == 'standardNumberType'">
                        standard_number_type
                    </when>
                    <when test="sort.property == 'grossAmount'">
                        gross_amount
                    </when>
                    <when test="sort.property == 'serviceFeeAmount'">
                        service_fee_amount
                    </when>
                    <when test="sort.property == 'netAmount'">
                        net_amount
                    </when>
                    <when test="sort.property == 'scenarioName'">
                        scenario_name
                    </when>
                    <when test="sort.property == 'checkNumber'">
                        check_number
                    </when>
                    <when test="sort.property == 'checkDate'">
                        check_date
                    </when>
                    <when test="sort.property == 'cccEventId'">
                        ccc_event_id
                    </when>
                    <when test="sort.property == 'distributionName'">
                        distribution_name
                    </when>
                    <when test="sort.property == 'distributionDate'">
                        distribution_date
                    </when>
                    <when test="sort.property == 'detailLicenseeClassId'">
                        detail_licensee_class_id
                    </when>
                    <when test="sort.property == 'enrollmentProfile'">
                        enrollment_profile
                    </when>
                    <when test="sort.property == 'discipline'">
                        discipline
                    </when>
                    <when test="sort.property == 'publicationType'">
                        pub_type_name
                    </when>
                    <when test="sort.property == 'usagePeriod'">
                        usage_period
                    </when>
                    <when test="sort.property == 'usageSource'">
                        usage_source
                    </when>
                    <when test="sort.property == 'comment'">
                        comment
                    </when>
                </choose>
                <include refid="IUsageMapper.direction"/>,
                df_usage_uid
            </when>
            <otherwise>
                df_usage_uid
            </otherwise>
        </choose>
        <include refid="IUsageMapper.ifPageable"/>
    </sql>

    <sql id="selectArchivedUsagesForAuditSql">
        select
            df_usage_archive_uid df_usage_uid,
            u.status_ind,
            u.product_family,
            u.df_usage_batch_uid,
            ub.name batch_name,
            ub.payment_date batch_period_end_date,
            u.rh_account_number,
            rh.name rh_name,
            u.payee_account_number,
            payee.name payee_name,
            wr_wrk_inst,
            system_title,
            standard_number,
            standard_number_type,
            u.gross_amount,
            u.net_amount,
            service_fee_amount,
            u.updated_datetime,
            s.name scenario_name,
            u.check_number,
            u.check_date,
            u.ccc_event_id,
            u.distribution_name,
            u.distribution_date,
            u.period_end_date,
            u.comment,
            uaacl.baseline_uid,
            uaacl.usage_period,
            uaacl.usage_source,
            uaacl.number_of_pages,
            uaacl.detail_licensee_class_id,
            pt.name pub_type_name,
            dlc.discipline,
            dlc.enrollment_profile
        from ${schema}.df_usage_archive u
        join ${schema}.df_usage_batch ub on ub.df_usage_batch_uid = u.df_usage_batch_uid
        join ${schema}.df_usage_aacl uaacl on u.df_usage_archive_uid = uaacl.df_usage_aacl_uid
        left join ${schema}.df_publication_type pt on uaacl.df_publication_type_uid = pt.df_publication_type_uid
        left join ${schema}.df_detail_licensee_class dlc on uaacl.detail_licensee_class_id = dlc.detail_licensee_class_id
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = u.rh_account_number
        left join ${schema}.df_rightsholder payee on payee.rh_account_number = u.payee_account_number
        left join ${schema}.df_scenario s on s.df_scenario_uid = u.df_scenario_uid
        <include refid="IAaclUsageMapper.archivedAaclAuditFilterWhereClause"/>
    </sql>

    <sql id="archivedAaclAuditFilterWhereClause">
        <where>
            <include refid="IAaclUsageMapper.aaclAuditFilterWhereClause">
                <property name="detail_uid" value="u.df_usage_archive_uid"/>
            </include>
            <if test="null != filter.cccEventId">
                and ccc_event_id ilike '%' || #{filter.cccEventId} || '%'
            </if>
            <if test="null != filter.distributionName">
                and distribution_name ilike '%' || #{filter.distributionName} || '%'
            </if>
        </where>
    </sql>

    <sql id="aaclAuditFilterWhereClause">
        <if test="!filter.rhAccountNumbers.isEmpty()">
            u.rh_account_number in
            <foreach collection="filter.rhAccountNumbers" item="accountNumber" separator="," open="(" close=")">
                #{accountNumber}
            </foreach>
        </if>
        <if test="!filter.batchesIds.isEmpty()">
            and ub.df_usage_batch_uid in
            <foreach collection="filter.batchesIds" item="batchId" separator="," open="(" close=")">
                #{batchId}
            </foreach>
        </if>
        <if test="!filter.statuses.isEmpty()">
            and u.status_ind in
            <foreach collection="filter.statuses" item="status" separator="," open="(" close=")">
                #{status}
            </foreach>
        </if>
        <if test="null != filter.productFamily">
            and u.product_family = #{filter.productFamily}
        </if>
        <if test="null != filter.usagePeriod">
            and uaacl.usage_period = #{filter.usagePeriod}
        </if>
        <if test="null != filter.searchValue">
            and (
            ${detail_uid} like '%' || #{filter.searchValue} || '%' or
            cast(wr_wrk_inst as text) like '%' || #{filter.searchValue} || '%' or
            system_title ilike '%' || #{filter.searchValue} || '%')
        </if>
    </sql>

    <sql id="aaclUsageFilter">
        <where>
            <if test="filter.usageBatchesIds.size() > 0">
                and
                <foreach collection="filter.usageBatchesIds" item="usageBatchId" open="(" separator=" or " close=")">
                    u.df_usage_batch_uid = #{usageBatchId}
                </foreach>
            </if>
            <if test="null != filter.productFamily">
                and u.product_family = #{filter.productFamily}
            </if>
            <if test="null != filter.usageStatus">
                and u.status_ind = #{filter.usageStatus}
            </if>
            <if test="null != filter.usagePeriod">
                and uaacl.usage_period = #{filter.usagePeriod}
            </if>
        </where>
    </sql>

    <sql id="aaclChooseSortProperty">
        <choose>
            <when test="sort.property == 'detailId'">
                ${detail_uid} <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'status'">
                u.status_ind <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'productFamily'">
                u.product_family <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'batchName'">
                ub.name <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'periodEndDate'">
                ub.payment_date <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'rhAccountNumber'">
                u.rh_account_number <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'rhName'">
                rh.name <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'wrWrkInst'">
                u.wr_wrk_inst <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'systemTitle'">
                u.system_title <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'standardNumber'">
                u.standard_number <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'standardNumberType'">
                u.standard_number_type <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'institution'">
                uaacl.institution <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'usagePeriod'">
                uaacl.usage_period <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'usageSource'">
                uaacl.usage_source <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'numberOfCopies'">
                u.number_of_copies <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'numberOfPages'">
                uaacl.number_of_pages <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'rightLimitation'">
                uaacl.right_limitation <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'comment'">
                u.comment <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'discipline'">
                dlc.discipline <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'enrollmentProfile'">
                dlc.enrollment_profile <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'publicationType'">
                pt.name <include refid="IUsageMapper.direction"/>
            </when>
            <when test="sort.property == 'detailLicenseeClassId'">
                uaacl.detail_licensee_class_id <include refid="IUsageMapper.direction"/>
            </when>
        </choose>
    </sql>

    <sql id="selectDtosByFilterSql">
        select
            <include refid="IAaclUsageMapper.aaclUsageColumns"/>,
            ub.name batch_name
        from ${schema}.df_usage u
        join ${schema}.df_usage_batch ub on u.df_usage_batch_uid = ub.df_usage_batch_uid
        join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
        left join ${schema}.df_publication_type pt on uaacl.df_publication_type_uid = pt.df_publication_type_uid
        left join ${schema}.df_detail_licensee_class dlc on uaacl.detail_licensee_class_id = dlc.detail_licensee_class_id
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = u.rh_account_number
        <include refid="IAaclUsageMapper.aaclUsageFilter"/>
            and u.df_scenario_uid is null
        order by
        <choose>
            <when test="null != sort">
                <include refid="IAaclUsageMapper.aaclChooseSortProperty">
                    <property name="detail_uid" value="u.df_usage_uid"/>
                </include>
            </when>
            <otherwise>
                updated_datetime desc
            </otherwise>
        </choose>,
        df_usage_uid
        <include refid="IUsageMapper.ifPageable"/>
    </sql>

    <select id="findDtosByFilter" resultMap="aaclUsageDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAaclUsageMapper.selectDtosByFilterSql"/>
    </select>

    <sql id="selectCountByFilterSql">
        select count(1)
        from ${schema}.df_usage u
        join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
        <include refid="IAaclUsageMapper.aaclUsageFilter"/>
            and u.df_scenario_uid is null
    </sql>

    <select id="findForAudit" resultMap="aaclUsageDtoResultMap" parameterType="map">
        <include refid="IAaclUsageMapper.selectForAuditSql"/>
    </select>

    <select id="findCountForAudit" resultType="int" parameterType="map">
        <include refid="IAaclUsageMapper.selectCountForAuditSql"/>
    </select>

    <select id="findCountByFilter" parameterType="map" resultType="int">
        <include refid="IAaclUsageMapper.selectCountByFilterSql"/>
    </select>

    <insert id="insert" parameterType="Usage">
        with u as (
            insert into ${schema}.df_usage (
                df_usage_uid,
                df_usage_batch_uid,
                wr_wrk_inst,
                system_title,
                standard_number,
                standard_number_type,
                rh_account_number,
                status_ind,
                product_family,
                number_of_copies,
                comment,
                <include refid="StoredEntityMapper.additionalColumns"/>
            )
            values (
                #{id},
                #{batchId},
                #{wrWrkInst},
                #{systemTitle},
                #{standardNumber},
                #{standardNumberType},
                #{rightsholder.accountNumber},
                #{status},
                #{productFamily},
                #{numberOfCopies},
                #{comment},
                <include refid="StoredEntityMapper.insert"/>
            )
        )
        insert into ${schema}.df_usage_aacl (
            df_usage_aacl_uid,
            institution,
            usage_period,
            usage_source,
            number_of_pages,
            right_limitation,
            <include refid="StoredEntityMapper.additionalColumns"/>
        )
        values (
            #{id},
            #{aaclUsage.institution},
            #{aaclUsage.usagePeriod},
            #{aaclUsage.usageSource},
            #{aaclUsage.numberOfPages},
            #{aaclUsage.rightLimitation},
            <include refid="StoredEntityMapper.insert"/>
        )
    </insert>

    <select id="insertFromBaseline" parameterType="map" resultType="string">
        with baseline_usages as (
            select
                uuid_generate_v4() df_usage_uid,
                #{batchId} df_usage_batch_uid,
                wr_wrk_inst,
                'NEW' status_ind,
                'AACL' product_family,
                usage_period,
                usage_source,
                number_of_copies,
                number_of_pages,
                detail_licensee_class_id,
                original_publication_type,
                df_publication_type_uid,
                publication_type_weight,
                institution,
                comment,
                df_usage_baseline_aacl_uid
            from ${schema}.df_usage_baseline_aacl
            where usage_period in
            <foreach collection="periods" item="period" open="(" separator="," close=")">
                #{period}
            </foreach>
        ),
        u as (
            insert into ${schema}.df_usage (
                df_usage_uid,
                df_usage_batch_uid,
                wr_wrk_inst,
                status_ind,
                product_family,
                number_of_copies,
                comment,
                <include refid="StoredEntityMapper.additionalColumns"/>
            )
            select
                df_usage_uid,
                df_usage_batch_uid,
                wr_wrk_inst,
                status_ind,
                product_family,
                number_of_copies,
                comment,
                <include refid="StoredEntityMapper.insert"/>
            from baseline_usages
        )
        insert into ${schema}.df_usage_aacl (
            df_usage_aacl_uid,
            institution,
            usage_period,
            usage_source,
            number_of_pages,
            detail_licensee_class_id,
            original_publication_type,
            df_publication_type_uid,
            publication_type_weight,
            baseline_uid,
            <include refid="StoredEntityMapper.additionalColumns"/>
        )
        select
            df_usage_uid,
            institution,
            usage_period,
            usage_source,
            number_of_pages,
            detail_licensee_class_id,
            original_publication_type,
            df_publication_type_uid,
            publication_type_weight,
            df_usage_baseline_aacl_uid,
            <include refid="StoredEntityMapper.insert"/>
        from baseline_usages
        returning df_usage_aacl_uid
    </select>

    <select id="updateProcessedUsage" parameterType="map" resultType="string">
        with u as (
            update ${schema}.df_usage_aacl
            set
                right_limitation = #{aaclUsage.rightLimitation},
                <include refid="StoredEntityMapper.update"/>
            where df_usage_aacl_uid = #{id}
        )
        update ${schema}.df_usage
        set
            status_ind = #{status},
            rh_account_number = #{rightsholder.accountNumber},
            system_title = #{systemTitle},
            standard_number = #{standardNumber},
            standard_number_type = #{standardNumberType},
            <include refid="StoredEntityMapper.update"/>
        where df_usage_uid = #{id}
            and record_version = #{version}
        returning df_usage_uid
    </select>

    <delete id="deleteById" parameterType="string">
        with u as (
            delete from ${schema}.df_usage
            where df_usage_uid = #{usageId}
        )
        delete from ${schema}.df_usage_aacl
        where df_usage_aacl_uid = #{usageId}
    </delete>

    <select id="findByIds" resultMap="aaclUsageResultMap">
        select
            <include refid="IAaclUsageMapper.aaclUsageColumns"/>
        from ${schema}.df_usage u
        join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
        join ${schema}.df_usage_batch ub on u.df_usage_batch_uid = ub.df_usage_batch_uid
        left join ${schema}.df_publication_type pt on uaacl.df_publication_type_uid = pt.df_publication_type_uid
        left join ${schema}.df_detail_licensee_class dlc on uaacl.detail_licensee_class_id = dlc.detail_licensee_class_id
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = u.rh_account_number
        where u.df_usage_uid in
        <foreach collection="list" item="usageId" open="(" separator="," close=")">
            #{usageId}
        </foreach>
        order by u.df_usage_uid
    </select>

    <select id="findReferencedAaclUsagesCountByIds" resultType="int" parameterType="list">
        select count(1)
        from ${schema}.df_usage_aacl
        where df_usage_aacl_uid in
        <foreach collection="usageIds" item="usageId" open="(" separator="," close=")">
            #{usageId}
        </foreach>
    </select>

    <select id="findBaselinePeriods" parameterType="map" resultType="int">
        select distinct usage_period
        from ${schema}.df_usage_baseline_aacl
        where <![CDATA[usage_period <= #{startPeriod}]]>
        order by usage_period desc
        limit #{numberOfBaselineYears}
    </select>

    <select id="findUsagePeriods" resultType="int">
        select distinct usage_period
        from ${schema}.df_usage_aacl
        order by usage_period
    </select>

    <select id="findUsagePeriodsByFilter" parameterType="UsageFilter" resultType="int">
        select distinct uaacl.usage_period
        from ${schema}.df_usage u
        join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
        <include refid="IAaclUsageMapper.aaclUsageFilter"/>
        order by uaacl.usage_period desc
    </select>

    <select id="isValidFilteredUsageStatus" parameterType="map" resultType="boolean">
        select not exists (
            select 1
            from ${schema}.df_usage u
            join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
            join ${schema}.df_usage_batch ub on u.df_usage_batch_uid = ub.df_usage_batch_uid
            <include refid="IAaclUsageMapper.aaclUsageFilter"/>
                and u.df_scenario_uid is null
                and u.status_ind != #{status}
        )
    </select>

    <update id="updateClassifiedUsage" parameterType="map">
        with u as (
            update ${schema}.df_usage
            set
                status_ind = #{status},
                wr_wrk_inst = #{aaclUsage.wrWrkInst},
                comment = #{aaclUsage.comment},
                <include refid="StoredEntityMapper.update"/>
            where df_usage_uid = #{aaclUsage.detailId}
        )
        update ${schema}.df_usage_aacl uaacl
        set
            detail_licensee_class_id = dlc.detail_licensee_class_id,
            df_publication_type_uid = pt.df_publication_type_uid,
            updated_by_user = #{updateUser},
            updated_datetime = now(),
            record_version = uaacl.record_version + 1
        from ${schema}.df_publication_type pt, ${schema}.df_detail_licensee_class dlc
        where df_usage_aacl_uid = #{aaclUsage.detailId}
            and pt.name ilike #{aaclUsage.publicationType}
            and dlc.enrollment_profile ilike #{aaclUsage.enrollmentProfile}
            and dlc.discipline ilike #{aaclUsage.discipline}
    </update>

    <update id="updatePayeeByAccountNumber" parameterType="map">
        update ${schema}.df_usage
        set
            payee_account_number = #{payeeAccountNumber},
            <include refid="StoredEntityMapper.update"/>
        where rh_account_number = #{rhAccountNumber}
        and df_scenario_uid = #{scenarioId}
    </update>

    <delete id="deleteByBatchId" parameterType="string">
        with usage_ids as (
            delete from ${schema}.df_usage
            where df_usage_batch_uid = #{batchId}
            returning df_usage_uid
        )
        delete from ${schema}.df_usage_aacl
        where df_usage_aacl_uid in (select df_usage_uid from usage_ids)
    </delete>

    <update id="addToScenario" parameterType="map">
        update ${schema}.df_usage u
        set
            df_scenario_uid = #{scenarioId},
            status_ind = 'LOCKED',
            updated_by_user = #{updateUser},
            updated_datetime = now(),
            record_version = u.record_version + 1
        from ${schema}.df_usage_aacl uaacl
        <include refid="IAaclUsageMapper.aaclUsageFilter"/>
        and u.df_usage_uid = uaacl.df_usage_aacl_uid
    </update>

    <update id="updatePublicationTypeWeight" parameterType="map">
        update ${schema}.df_usage_aacl uaacl
        set
            publication_type_weight = #{weight},
            updated_by_user = #{updateUser},
            updated_datetime = now(),
            record_version = u.record_version + 1
        from ${schema}.df_usage u
        where uaacl.df_usage_aacl_uid = u.df_usage_uid
            and u.df_scenario_uid = #{scenarioId}
            and uaacl.df_publication_type_uid = #{publicationTypeId}
            and uaacl.baseline_uid is null
    </update>

    <select id="usagesExistByDetailLicenseeClassAndFilter" parameterType="map" resultType="boolean">
        select exists (
            select 1
            from ${schema}.df_usage u
            join ${schema}.df_usage_aacl uaacl on u.df_usage_uid = uaacl.df_usage_aacl_uid
            <include refid="IAaclUsageMapper.aaclUsageFilter"/>
                and uaacl.detail_licensee_class_id = #{detailLicenseeClassId}
                and u.df_scenario_uid is null
        )
    </select>
</mapper>
