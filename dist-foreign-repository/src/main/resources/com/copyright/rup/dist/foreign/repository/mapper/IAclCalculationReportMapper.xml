<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IAclCalculationReportMapper">

    <resultMap id="aclSummaryOfWorkSharesByAggLcReportDtoResultMap" type="AclSummaryOfWorkSharesByAggLcReportDto">
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="totalDetailSharePrint" column="total_shares_print"/>
        <result property="totalDetailShareDigital" column="total_shares_digital"/>
    </resultMap>

    <resultMap id="aclLiabilitiesByAggLicClassReportDtoResultMap" type="AclLiabilitiesByAggLicClassReportDto">
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
        <result property="printNetAmount" column="print_net_amount"/>
        <result property="digitalNetAmount" column="digital_net_amount"/>
        <result property="aclNetAmount" column="acl_net_amount"/>
        <result property="maclNetAmount" column="macl_net_amount"/>
        <result property="vgwNetAmount" column="vgw_net_amount"/>
        <result property="jacdclNetAmount" column="jacdcl_net_amount"/>
    </resultMap>

    <resultMap id="aclScenarioDetailsReportDtoResultMap" type="AclScenarioDetailsReport">
        <result property="rhAccountNumber" column="rh_account_number"/>
        <result property="rhName" column="rh_name"/>
        <result property="title" column="system_title"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="scenarioName" column="scenario_name"/>
        <result property="licenseType" column="license_type"/>
        <result property="typeOfUse" column="type_of_use"/>
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
    </resultMap>

    <resultMap id="aclTotalAmountsReportDtoResultMap" type="AclReportAmountsDto">
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
    </resultMap>

    <select id="findAclGrantDetailsCountByFilter" parameterType="map" resultType="int">
        <include refid="IAclGrantDetailMapper.selectCountByFilterSql"/>
    </select>

    <select id="findAclGrantDetailDtosByFilter" resultMap="IAclGrantDetailMapper.aclGrantDetailDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclGrantDetailMapper.selectDtosByFilterSql"/>
    </select>

    <select id="findAclUsagesCountByFilter" parameterType="map" resultType="int">
        <include refid="IAclUsageMapper.selectCountByFilterSql"/>
    </select>

    <select id="findAclUsageDtosByFilter" resultMap="IAclUsageMapper.aclUsageDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclUsageMapper.selectDtosByFilterSql"/>
    </select>

    <select id="writeAclFundPoolDetailsCsvReport" resultMap="IAclFundPoolMapper.aclFundPoolDetailDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclFundPoolMapper.selectDtosByFilterSql"/>
    </select>

    <select id="findAclScenarioDetailDtosCount" parameterType="map" resultType="int">
        <include refid="IAclScenarioUsageMapper.selectDtosCountByScenarioIdSql"/>
    </select>

    <select id="findAclScenarioDetailDtos" resultMap="IAclScenarioUsageMapper.aclScenarioDetailDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclScenarioUsageMapper.selectDtosByScenarioIdSql"/>
    </select>

    <select id="findAclRightsholderTotalsHoldersReportDtos" parameterType="map" resultMap="IAclScenarioUsageMapper.aclRightsholderTotalsHolderResultMap">
        <include refid="IAclScenarioUsageMapper.findAclRightsholderTotalsHoldersByScenarioIdSql"/>
    </select>

    <select id="findSummaryOfWorkSharesByAggLcReportDtos" parameterType="string" resultMap="aclSummaryOfWorkSharesByAggLcReportDtoResultMap">
        select
            shd.aggregate_licensee_class_id,
            description,
            sum(case when type_of_use = 'PRINT' then coalesce(detail_share, 0) else 0 end) as total_shares_print,
            sum(case when type_of_use = 'DIGITAL' then coalesce(detail_share, 0) else 0 end) as total_shares_digital
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_aggregate_licensee_class alc on shd.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        where df_acl_scenario_uid = #{scenarioId}
        group by shd.aggregate_licensee_class_id, description
        order by shd.aggregate_licensee_class_id
    </select>

    <select id="findAclScenarioDetailsReportDtos" parameterType="map" resultMap="aclScenarioDetailsReportDtoResultMap">
        select
            shd.rh_account_number,
            rh.name rh_name,
            sd.system_title,
            sd.wr_wrk_inst,
            s.name scenario_name,
            s.license_type,
            shd.type_of_use,
            shd.aggregate_licensee_class_id,
            alc.description,
            shd.gross_amount,
            shd.net_amount
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_acl_scenario_detail sd on shd.df_acl_scenario_detail_uid = sd.df_acl_scenario_detail_uid
        join ${schema}.df_aggregate_licensee_class alc on shd.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        join ${schema}.df_rightsholder rh on shd.rh_account_number = rh.rh_account_number
        join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        where s.period_end_date = #{period}
            <if test="scenarioIds.size() > 0">
                and shd.df_acl_scenario_uid in
                <foreach collection="scenarioIds" item="scenarioId" separator="," open="(" close=")">
                    #{scenarioId}
                </foreach>
            </if>
    </select>

    <select id="findTotalAmountsOfAclScenarioDetailsReport" parameterType="map" resultMap="aclTotalAmountsReportDtoResultMap">
        select
            sum(gross_amount) as gross_amount,
            sum(net_amount) as net_amount
        from ${schema}.df_acl_share_detail shd
        join apps.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        where s.period_end_date = #{period}
            <if test="scenarioIds.size() > 0">
                and df_acl_scenario_uid in
                <foreach collection="scenarioIds" item="scenarioId" separator="," open="(" close=")">
                    #{scenarioId}
                </foreach>
            </if>
    </select>

    <select id="findAclLiabilitiesByAggLicClassReportDtos" parameterType="map" resultMap="aclLiabilitiesByAggLicClassReportDtoResultMap">
        select
            shd.aggregate_licensee_class_id,
            alc.description,
            sum(gross_amount) gross_amount,
            sum(net_amount) net_amount,
            sum(case when type_of_use = 'PRINT' then coalesce(net_amount , 0) else 0 end) as print_net_amount,
            sum(case when type_of_use = 'DIGITAL' then coalesce(net_amount , 0) else 0 end) as digital_net_amount,
            sum(case when s.license_type = 'ACL' then coalesce(net_amount , 0) else 0 end) as acl_net_amount,
            sum(case when s.license_type = 'MACL' then coalesce(net_amount , 0) else 0 end) as macl_net_amount,
            sum(case when s.license_type = 'VGW' then coalesce(net_amount , 0) else 0 end) as vgw_net_amount,
            sum(case when s.license_type = 'JACDCL' then coalesce(net_amount , 0) else 0 end) as jacdcl_net_amount
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        join ${schema}.df_aggregate_licensee_class alc on shd.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        where s.period_end_date = #{period}
        <if test="scenarios.size() > 0">
            and
            <foreach collection="scenarios" item="scenario" open="(" separator=" or " close=")">
                shd.df_acl_scenario_uid = #{scenario.id}
            </foreach>
        </if>
        group by shd.aggregate_licensee_class_id, alc.description
        order by shd.aggregate_licensee_class_id
    </select>
</mapper>
