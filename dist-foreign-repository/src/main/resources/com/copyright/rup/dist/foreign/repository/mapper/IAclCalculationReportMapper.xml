<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IAclCalculationReportMapper">

    <resultMap id="aclSummaryOfWorkSharesByAggLcReportDtoResultMap" type="AclSummaryOfWorkSharesByAggLcReportDto">
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="totalDetailSharePrint" column="total_shares_print"/>
        <result property="totalDetailShareDigital" column="total_shares_digital"/>
    </resultMap>

    <resultMap id="aclWorkSharesByAggLcReportDtoResultMap" type="AclWorkSharesByAggLcReportDto">
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="title" column="system_title"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="printRhAccountNumber" column="print_rh_account_number"/>
        <result property="printRhName" column="print_rh_name"/>
        <result property="digitalRhAccountNumber" column="digital_rh_account_number"/>
        <result property="digitalRhName" column="digital_rh_name"/>
        <result property="printTotalShare" column="print_total_share"/>
        <result property="printValueShare" column="print_value_share"/>
        <result property="printVolumeShare" column="print_volume_share"/>
        <result property="printNetAmount" column="print_net_amount"/>
        <result property="digitalTotalShare" column="digital_total_share"/>
        <result property="digitalValueShare" column="digital_value_share"/>
        <result property="digitalVolumeShare" column="digital_volume_share"/>
        <result property="digitalNetAmount" column="digital_net_amount"/>
        <result property="totalNetAmount" column="total_net_amount"/>
    </resultMap>

    <resultMap id="aclLiabilitiesByAggLicClassReportDtoResultMap" type="AclLiabilitiesByAggLicClassReportDto">
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
        <result property="printNetAmount" column="print_net_amount"/>
        <result property="digitalNetAmount" column="digital_net_amount"/>
        <result property="aclNetAmount" column="acl_net_amount"/>
        <result property="maclNetAmount" column="macl_net_amount"/>
        <result property="vgwNetAmount" column="vgw_net_amount"/>
        <result property="jacdclNetAmount" column="jacdcl_net_amount"/>
    </resultMap>

    <resultMap id="aclFundPoolByAggLcReportDtoResultMap" type="AclFundPoolByAggLcReportDto">
        <result property="fundPoolName" column="name"/>
        <result property="period" column="period"/>
        <result property="licenseType" column="license_type"/>
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="netAmount" column="net_amount"/>
    </resultMap>

    <resultMap id="aclScenarioDetailsReportDtoResultMap" type="AclScenarioDetailsReport">
        <result property="rhAccountNumber" column="rh_account_number"/>
        <result property="rhName" column="rh_name"/>
        <result property="title" column="system_title"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="scenarioName" column="scenario_name"/>
        <result property="licenseType" column="license_type"/>
        <result property="typeOfUse" column="type_of_use"/>
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="description"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
    </resultMap>

    <resultMap id="aclTotalAmountsReportDtoResultMap" type="AclReportTotalAmountsDto">
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
        <result property="printNetAmount" column="print_net_amount"/>
        <result property="digitalNetAmount" column="digital_net_amount"/>
        <result property="aclNetAmount" column="acl_net_amount"/>
        <result property="maclNetAmount" column="macl_net_amount"/>
        <result property="vgwNetAmount" column="vgw_net_amount"/>
        <result property="jacdclNetAmount" column="jacdcl_net_amount"/>
    </resultMap>

    <resultMap id="aclLiabilitiesByRhReportDtoResultMap" type="AclLiabilitiesByRhReportDto">
        <result property="rhAccountNumber" column="rh_account_number"/>
        <result property="rhName" column="rh_name"/>
        <result property="printPayeeAccountNumber" column="print_payee_account_number"/>
        <result property="printPayeeName" column="print_payee_name"/>
        <result property="digitalPayeeAccountNumber" column="digital_payee_account_number"/>
        <result property="digitalPayeeName" column="digital_payee_name"/>
        <result property="grossAmount" column="gross_amount"/>
        <result property="netAmount" column="net_amount"/>
        <result property="printNetAmount" column="print_net_amount"/>
        <result property="digitalNetAmount" column="digital_net_amount"/>
        <result property="aclNetAmount" column="acl_net_amount"/>
        <result property="maclNetAmount" column="macl_net_amount"/>
        <result property="vgwNetAmount" column="vgw_net_amount"/>
        <result property="jacdclNetAmount" column="jacdcl_net_amount"/>
    </resultMap>

    <resultMap id="AclComparisonByAggLcClassAndTitleReportDtoResultMap" type="AclComparisonByAggLcClassAndTitleReportDto">
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="aggregate_licensee_class_name"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="systemTitle" column="system_title"/>
        <result property="pubTypeName" column="name"/>
        <result property="printRhAccountNumberPreviousPeriod" column="print_rh_account_number_previous_period"/>
        <result property="printRhNamePreviousPeriod" column="print_rh_name_previous_period"/>
        <result property="digitalRhAccountNumberPreviousPeriod" column="digital_rh_account_number_previous_period"/>
        <result property="digitalRhNamePreviousPeriod" column="digital_rh_name_previous_period"/>
        <result property="printNetAmountPreviousPeriod" column="print_net_amount_previous_period"/>
        <result property="digitalNetAmountPreviousPeriod" column="digital_net_amount_previous_period"/>
        <result property="totalNetAmountPreviousPeriod" column="total_net_amount_previous_period"/>
        <result property="printRhAccountNumberCurrentPeriod" column="print_rh_account_number_current_period"/>
        <result property="printRhNameCurrentPeriod" column="print_rh_name_current_period"/>
        <result property="digitalRhAccountNumberCurrentPeriod" column="digital_rh_account_number_current_period"/>
        <result property="digitalRhNameCurrentPeriod" column="digital_rh_name_current_period"/>
        <result property="printNetAmountCurrentPeriod" column="print_net_amount_current_period"/>
        <result property="digitalNetAmountCurrentPeriod" column="digital_net_amount_current_period"/>
        <result property="totalNetAmountCurrentPeriod" column="total_net_amount_current_period"/>
        <result property="delta" column="delta"/>
        <result property="changePercent" column="change_percent"/>
    </resultMap>

    <sql id="selectAclTotalAmountsSql">
        select
            sum(gross_amount) as gross_amount,
            sum(net_amount) as net_amount,
            sum(case when type_of_use = 'PRINT' then coalesce(net_amount , 0) else 0 end) as print_net_amount,
            sum(case when type_of_use = 'DIGITAL' then coalesce(net_amount , 0) else 0 end) as digital_net_amount,
            sum(case when s.license_type = 'ACL' then coalesce(net_amount , 0) else 0 end) as acl_net_amount,
            sum(case when s.license_type = 'MACL' then coalesce(net_amount , 0) else 0 end) as macl_net_amount,
            sum(case when s.license_type = 'VGW' then coalesce(net_amount , 0) else 0 end) as vgw_net_amount,
            sum(case when s.license_type = 'JACDCL' then coalesce(net_amount , 0) else 0 end) as jacdcl_net_amount
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        where s.period_end_date = #{period}
        <if test="scenarios.size() > 0">
            and
            <foreach collection="scenarios" item="scenario" open="(" separator=" or " close=")">
                shd.df_acl_scenario_uid = #{scenario.id}
            </foreach>
        </if>
    </sql>

    <sql id="selectComparisonByAggLcClassAndTitleUsageData">
        select
            alc.aggregate_licensee_class_id,
            alc.description,
            scd.wr_wrk_inst,
            scd.system_title,
            pt.name,
            min(case when shd.type_of_use = 'PRINT' then shd.rh_account_number end) as print_rh_account_number,
            min(case when shd.type_of_use = 'DIGITAL' then shd.rh_account_number end) as digital_rh_account_number,
            sum(case when shd.type_of_use = 'PRINT' then coalesce(net_amount, 0) else 0 end) as print_net_amount,
            sum(case when shd.type_of_use = 'DIGITAL' then coalesce(net_amount, 0) else 0 end) as digital_net_amount,
            sum(net_amount) as total_net_amount
        from ${schema}.df_acl_scenario_detail scd
        join ${schema}.df_acl_share_detail shd on scd.df_acl_scenario_detail_uid = shd.df_acl_scenario_detail_uid
        join ${schema}.df_acl_scenario_licensee_class slc on scd.df_acl_scenario_uid = slc.df_acl_scenario_uid
            and scd.detail_licensee_class_id = slc.detail_licensee_class_id
        join ${schema}.df_aggregate_licensee_class alc on slc.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        join ${schema}.df_publication_type pt on scd.publication_type_uid = pt.df_publication_type_uid
        where shd.df_acl_scenario_uid in
        <foreach collection="${scenarios}" item="scenario" open="(" separator=", " close=")">
            #{scenario.id}
        </foreach>
        group by alc.aggregate_licensee_class_id, scd.wr_wrk_inst, scd.system_title, pt.name
    </sql>

    <select id="findAclGrantDetailsCountByFilter" parameterType="map" resultType="int">
        <include refid="IAclGrantDetailMapper.selectCountByFilterSql"/>
    </select>

    <select id="findAclGrantDetailDtosByFilter" resultMap="IAclGrantDetailMapper.aclGrantDetailDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclGrantDetailMapper.selectDtosByFilterSql"/>
    </select>

    <select id="findAclUsagesCountByFilter" parameterType="map" resultType="int">
        <include refid="IAclUsageMapper.selectCountByFilterSql"/>
    </select>

    <select id="findAclUsageDtosByFilter" resultMap="IAclUsageMapper.aclUsageDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclUsageMapper.selectDtosByFilterSql"/>
    </select>

    <select id="writeAclFundPoolDetailsCsvReport" resultMap="IAclFundPoolMapper.aclFundPoolDetailDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclFundPoolMapper.selectDtosByFilterSql"/>
    </select>

    <select id="findAclScenarioDetailDtosCount" parameterType="map" resultType="int">
        select count(1)
        from ${schema}.df_acl_scenario_detail
        where df_acl_scenario_uid = #{scenarioId}
    </select>

    <select id="findAclScenarioDetailDtos" resultMap="IAclScenarioUsageMapper.aclScenarioDetailDtoResultMap" parameterType="map" fetchSize="${usageSelectFetchSize}">
        <include refid="IAclScenarioUsageMapper.selectDtosByScenarioIdSql"/>
    </select>

    <select id="findAclRightsholderTotalsHoldersReportDtos" parameterType="map" resultMap="IAclScenarioUsageMapper.aclRightsholderTotalsHolderResultMap">
        <include refid="IAclScenarioUsageMapper.findAclRightsholderTotalsHoldersByScenarioIdSql"/>
    </select>

    <select id="findSummaryOfWorkSharesByAggLcReportDtos" parameterType="string" resultMap="aclSummaryOfWorkSharesByAggLcReportDtoResultMap">
        select
            shd.aggregate_licensee_class_id,
            description,
            sum(case when type_of_use = 'PRINT' then coalesce(detail_share, 0) else 0 end) as total_shares_print,
            sum(case when type_of_use = 'DIGITAL' then coalesce(detail_share, 0) else 0 end) as total_shares_digital
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_aggregate_licensee_class alc on shd.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        where df_acl_scenario_uid = #{scenarioId}
        group by shd.aggregate_licensee_class_id, description
        order by shd.aggregate_licensee_class_id
    </select>

    <select id="findWorkSharesByAggLcReportDtos" parameterType="string" resultMap="aclWorkSharesByAggLcReportDtoResultMap">
        select
            shd.aggregate_licensee_class_id,
            agg.description,
            sd.wr_wrk_inst,
            sd.system_title,
            min(case when shd.type_of_use = 'PRINT' then shd.rh_account_number end) as print_rh_account_number,
            min(case when shd.type_of_use = 'PRINT' then rh.name end) as print_rh_name,
            min(case when shd.type_of_use = 'DIGITAL' then shd.rh_account_number end) as digital_rh_account_number,
            min(case when shd.type_of_use = 'DIGITAL' then rh.name end) as digital_rh_name,
            sum(case when shd.type_of_use = 'PRINT' then coalesce(detail_share, 0) else 0 end) as print_total_share,
            sum(case when shd.type_of_use = 'PRINT' then coalesce(volume_share, 0) else 0 end) as print_volume_share,
            sum(case when shd.type_of_use = 'PRINT' then coalesce(value_share, 0) else 0 end) as print_value_share,
            sum(case when shd.type_of_use = 'PRINT' then coalesce(net_amount, 0) else 0 end) as print_net_amount,
            sum(case when shd.type_of_use = 'DIGITAL' then coalesce(detail_share , 0) else 0 end) as digital_total_share,
            sum(case when shd.type_of_use = 'DIGITAL' then coalesce(volume_share, 0) else 0 end) as digital_volume_share,
            sum(case when shd.type_of_use = 'DIGITAL' then coalesce(value_share, 0) else 0 end) as digital_value_share,
            sum(case when shd.type_of_use = 'DIGITAL' then coalesce(net_amount, 0) else 0 end) as digital_net_amount,
            sum(net_amount) as total_net_amount
        from ${schema}.df_acl_scenario_detail sd
        join ${schema}.df_acl_share_detail shd on shd.df_acl_scenario_detail_uid = sd.df_acl_scenario_detail_uid
        join ${schema}.df_aggregate_licensee_class agg on shd.aggregate_licensee_class_id  = agg.aggregate_licensee_class_id
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = shd.rh_account_number
        where sd.df_acl_scenario_uid = #{scenarioId}
        group by shd.aggregate_licensee_class_id, agg.description, sd.wr_wrk_inst, sd.system_title
        order by shd.aggregate_licensee_class_id, sd.wr_wrk_inst
    </select>

    <select id="findAclScenarioDetailsReportDtos" parameterType="map" resultMap="aclScenarioDetailsReportDtoResultMap">
        select
            shd.rh_account_number,
            rh.name rh_name,
            sd.system_title,
            sd.wr_wrk_inst,
            s.name scenario_name,
            s.license_type,
            shd.type_of_use,
            shd.aggregate_licensee_class_id,
            alc.description,
            sum(gross_amount) gross_amount,
            sum(net_amount) net_amount
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_acl_scenario_detail sd on shd.df_acl_scenario_detail_uid = sd.df_acl_scenario_detail_uid
        join ${schema}.df_aggregate_licensee_class alc on shd.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        join ${schema}.df_rightsholder rh on shd.rh_account_number = rh.rh_account_number
        join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        where s.period_end_date = #{period}
            <if test="scenarios.size() > 0">
                and
                <foreach collection="scenarios" item="scenario" open="(" separator=" or " close=")">
                    shd.df_acl_scenario_uid = #{scenario.id}
                </foreach>
            </if>
        group by shd.rh_account_number, rh.name, sd.system_title, sd.wr_wrk_inst, s.name, s.license_type,
            shd.type_of_use, shd.aggregate_licensee_class_id, alc.description
        order by rh.name
    </select>

    <select id="findTotalAmountsOfAclScenarioDetailsReport" parameterType="map" resultMap="aclTotalAmountsReportDtoResultMap">
        select
            sum(gross_amount) as gross_amount,
            sum(net_amount) as net_amount
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        where s.period_end_date = #{period}
            <if test="scenarios.size() > 0">
                and
                <foreach collection="scenarios" item="scenario" open="(" separator=" or " close=")">
                    shd.df_acl_scenario_uid = #{scenario.id}
                </foreach>
            </if>
    </select>

    <select id="findAclLiabilitiesByAggLicClassReportDtos" parameterType="map" resultMap="aclLiabilitiesByAggLicClassReportDtoResultMap">
        select
            shd.aggregate_licensee_class_id,
            alc.description,
            sum(gross_amount) gross_amount,
            sum(net_amount) net_amount,
            sum(case when type_of_use = 'PRINT' then coalesce(net_amount , 0) else 0 end) as print_net_amount,
            sum(case when type_of_use = 'DIGITAL' then coalesce(net_amount , 0) else 0 end) as digital_net_amount,
            sum(case when s.license_type = 'ACL' then coalesce(net_amount , 0) else 0 end) as acl_net_amount,
            sum(case when s.license_type = 'MACL' then coalesce(net_amount , 0) else 0 end) as macl_net_amount,
            sum(case when s.license_type = 'VGW' then coalesce(net_amount , 0) else 0 end) as vgw_net_amount,
            sum(case when s.license_type = 'JACDCL' then coalesce(net_amount , 0) else 0 end) as jacdcl_net_amount
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        join ${schema}.df_aggregate_licensee_class alc on shd.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        where s.period_end_date = #{period}
        <if test="scenarios.size() > 0">
            and
            <foreach collection="scenarios" item="scenario" open="(" separator=" or " close=")">
                shd.df_acl_scenario_uid = #{scenario.id}
            </foreach>
        </if>
        group by shd.aggregate_licensee_class_id, alc.description
        order by shd.aggregate_licensee_class_id
    </select>

    <select id="findAclLiabilitiesByAggLicClassReportTotalAmounts" parameterType="map" resultMap="aclTotalAmountsReportDtoResultMap">
        <include refid="IAclCalculationReportMapper.selectAclTotalAmountsSql"/>
    </select>

    <select id="findAclLiabilitiesByRhReportDtos" parameterType="map" resultMap="aclLiabilitiesByRhReportDtoResultMap">
        with payees as materialized (
            select distinct on (shd.rh_account_number, type_of_use)
                shd.rh_account_number,
                type_of_use,
                payee_account_number,
                p.name
            from ${schema}.df_acl_share_detail shd
            join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
            left join ${schema}.df_rightsholder p on p.rh_account_number = shd.payee_account_number
            where s.period_end_date = #{period}
            <if test="scenarios.size() > 0">
                and
                <foreach collection="scenarios" item="scenario" open="(" separator=" or " close=")">
                    shd.df_acl_scenario_uid = #{scenario.id}
                </foreach>
            </if>
            order by shd.rh_account_number, type_of_use, s.created_datetime desc
        )
        select
            shd.rh_account_number,
            rh.name rh_name,
            min(case when payees.type_of_use = 'PRINT' then payees.payee_account_number end) as print_payee_account_number,
            min(case when payees.type_of_use = 'PRINT' then payees.name end) as print_payee_name,
            min(case when payees.type_of_use = 'DIGITAL' then payees.payee_account_number end) as digital_payee_account_number,
            min(case when payees.type_of_use = 'DIGITAL' then payees.name end) as digital_payee_name,
            sum(gross_amount) gross_amount,
            sum(net_amount) net_amount,
            sum(case when shd.type_of_use = 'PRINT' then coalesce(net_amount , 0) else 0 end) as print_net_amount,
            sum(case when shd.type_of_use = 'DIGITAL' then coalesce(net_amount , 0) else 0 end) as digital_net_amount,
            sum(case when s.license_type = 'ACL' then coalesce(net_amount , 0) else 0 end) as acl_net_amount,
            sum(case when s.license_type = 'MACL' then coalesce(net_amount , 0) else 0 end) as macl_net_amount,
            sum(case when s.license_type = 'VGW' then coalesce(net_amount , 0) else 0 end) as vgw_net_amount,
            sum(case when s.license_type = 'JACDCL' then coalesce(net_amount , 0) else 0 end) as jacdcl_net_amount
        from ${schema}.df_acl_share_detail shd
        join ${schema}.df_acl_scenario s on shd.df_acl_scenario_uid = s.df_acl_scenario_uid
        join payees on payees.rh_account_number = shd.rh_account_number and payees.type_of_use = shd.type_of_use
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = shd.rh_account_number
        where s.period_end_date = #{period}
        <if test="scenarios.size() > 0">
            and
            <foreach collection="scenarios" item="scenario" open="(" separator=" or " close=")">
                shd.df_acl_scenario_uid = #{scenario.id}
            </foreach>
        </if>
        group by shd.rh_account_number, rh_name
        order by rh_name
    </select>

    <select id="findAclLiabilitiesByRhReportTotalAmounts" parameterType="map" resultMap="aclTotalAmountsReportDtoResultMap">
        <include refid="IAclCalculationReportMapper.selectAclTotalAmountsSql"/>
    </select>

    <select id="findAclComparisonByAggLcClassAndTitleReportDtos" parameterType="map" resultMap="AclComparisonByAggLcClassAndTitleReportDtoResultMap">
        with usage_data_previous_period as materialized (
            <include refid="selectComparisonByAggLcClassAndTitleUsageData">
                <property name="scenarios" value="previousScenarios"/>
            </include>
        ),
        usage_data_current_period as materialized (
            <include refid="selectComparisonByAggLcClassAndTitleUsageData">
                <property name="scenarios" value="scenarios"/>
            </include>
        )
        select
            coalesce(udpp.aggregate_licensee_class_id, udcp.aggregate_licensee_class_id) as aggregate_licensee_class_id,
            coalesce(udpp.description, udcp.description) as aggregate_licensee_class_name,
            coalesce(udpp.wr_wrk_inst, udcp.wr_wrk_inst) as wr_wrk_inst,
            coalesce(udpp.system_title, udcp.system_title) as system_title,
            coalesce(udpp.name, udcp.name) as name,
            udpp.print_rh_account_number as print_rh_account_number_previous_period,
            rpp.name as print_rh_name_previous_period,
            udpp.digital_rh_account_number as digital_rh_account_number_previous_period,
            rpd.name as digital_rh_name_previous_period,
            udpp.print_net_amount as print_net_amount_previous_period,
            udpp.digital_net_amount as digital_net_amount_previous_period,
            udpp.total_net_amount as total_net_amount_previous_period,
            udcp.print_rh_account_number as print_rh_account_number_current_period,
            rcp.name as print_rh_name_current_period,
            udcp.digital_rh_account_number as digital_rh_account_number_current_period,
            rcd.name as digital_rh_name_current_period,
            udcp.print_net_amount as print_net_amount_current_period,
            udcp.digital_net_amount as digital_net_amount_current_period,
            udcp.total_net_amount as total_net_amount_current_period,
            coalesce(udcp.total_net_amount, 0) - coalesce(udpp.total_net_amount, 0) as delta,
            case when udpp.total_net_amount != 0 then (100 * (coalesce(udcp.total_net_amount, 0) - udpp.total_net_amount) / udpp.total_net_amount) else null end as change_percent
        from usage_data_previous_period udpp
        full join usage_data_current_period udcp on udpp.aggregate_licensee_class_id = udcp.aggregate_licensee_class_id
            and udpp.wr_wrk_inst = udcp.wr_wrk_inst and udpp.system_title = udcp.system_title and udpp.name = udcp.name
        left join ${schema}.df_rightsholder rpp on udpp.print_rh_account_number = rpp.rh_account_number
        left join ${schema}.df_rightsholder rpd on udpp.digital_rh_account_number = rpd.rh_account_number
        left join ${schema}.df_rightsholder rcp on udcp.print_rh_account_number = rcp.rh_account_number
        left join ${schema}.df_rightsholder rcd on udcp.digital_rh_account_number = rcd.rh_account_number
        order by aggregate_licensee_class_id, wr_wrk_inst
    </select>

    <select id="writeAclFundPoolByAggLcReport" resultMap="aclFundPoolByAggLcReportDtoResultMap">
        select
            fp.name,
            fp.period,
            fp.license_type,
            alc.aggregate_licensee_class_id,
            alc.description,
            sum(net_amount) net_amount
        from ${schema}.df_acl_fund_pool_detail fpd
        join ${schema}.df_acl_fund_pool fp on fpd.df_acl_fund_pool_uid = fp.df_acl_fund_pool_uid
        join ${schema}.df_detail_licensee_class dlc on fpd.detail_licensee_class_id = dlc.detail_licensee_class_id
        join ${schema}.df_aggregate_licensee_class alc on dlc.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        where fpd.df_acl_fund_pool_uid in
            <foreach collection="collection" item="fundPoolId" open="(" separator=", " close=")">
                #{fundPoolId}
            </foreach>
        group by fp.df_acl_fund_pool_uid, alc.aggregate_licensee_class_id, alc.description
        order by fp.period desc, fp.name, alc.aggregate_licensee_class_id
    </select>
</mapper>
