<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IFundPoolMapper">

    <resultMap id="preServiceFeeFundResultMap" type="PreServiceFeeFund" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_fund_pool_uid"/>
        <result property="name" column="name"/>
        <result property="amount" column="withdrawn_amount"/>
        <result property="comment" column="comment"/>
        <result property="createUser" column="created_by_user"/>
    </resultMap>

    <insert id="insert" parameterType="PreServiceFeeFund">
        insert into ${schema}.df_fund_pool (
            df_fund_pool_uid,
            name,
            withdrawn_amount,
            comment,
            <include refid="StoredEntityMapper.additionalColumns"/>
        ) values (
            #{id},
            #{name},
            #{amount},
            #{comment},
            <include refid="StoredEntityMapper.insert"/>
        )
    </insert>

    <select id="findById" resultMap="preServiceFeeFundResultMap" parameterType="string">
        select
            df_fund_pool_uid,
            name,
            withdrawn_amount,
            comment
        from ${schema}.df_fund_pool
        where df_fund_pool_uid = #{fundPoolId}
    </select>

    <select id="findAll" resultMap="preServiceFeeFundResultMap">
        select
            df_fund_pool_uid,
            name,
            withdrawn_amount,
            comment,
            created_by_user
        from ${schema}.df_fund_pool
        order by updated_datetime desc
    </select>

    <delete id="delete" parameterType="string">
        delete from ${schema}.df_fund_pool
        where df_fund_pool_uid = #{fundPoolId}
    </delete>

    <select id="findNamesByUsageBatchId" resultType="string" parameterType="string">
        select distinct name
        from ${schema}.df_fund_pool
        where df_fund_pool_uid in (
            select distinct df_fund_pool_uid
            from ${schema}.df_usage
            where df_usage_batch_uid = #{df_usage_batch_id}
        )
    </select>

    <select id="findCountByName" parameterType="string" resultType="int">
        select count(name)
        from ${schema}.df_fund_pool
        where upper(name) = upper(#{name})
    </select>
</mapper>
