<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IAclScenarioUsageArchiveMapper">

    <resultMap id="aclScenarioDetailArchivedResultMap" type="AclScenarioDetail" extends="StoredEntityMapper.storedEntityResult">
        <result property="id" column="df_acl_scenario_detail_archived_uid"/>
        <result property="scenarioId" column="df_acl_scenario_uid"/>
        <result property="period" column="period_end_date"/>
        <result property="originalDetailId" column="original_detail_id"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="systemTitle" column="system_title"/>
        <result property="detailLicenseeClass.id" column="detail_licensee_class_id"/>
        <result property="detailLicenseeClass.description" column="detail_licensee_class_name"/>
        <result property="aggregateLicenseeClassId" column="aggregate_licensee_class_id"/>
        <result property="aggregateLicenseeClassName" column="aggregate_licensee_class_name"/>
        <result property="publicationType.id" column="publication_type_uid"/>
        <result property="publicationType.weight" column="pub_type_weight"/>
        <result property="publicationType.period" column="pub_type_period"/>
        <result property="price" column="price"/>
        <result property="priceFlag" column="price_flag"/>
        <result property="content" column="content"/>
        <result property="contentFlag" column="content_flag"/>
        <result property="contentUnitPrice" column="content_unit_price"/>
        <result property="contentUnitPriceFlag" column="content_unit_price_flag"/>
        <result property="numberOfCopies" column="number_of_copies"/>
        <result property="usageAgeWeight" column="usage_age_weight"/>
        <result property="weightedCopies" column="weighted_copies"/>
        <result property="surveyCountry" column="survey_country"/>
        <result property="reportedTypeOfUse" column="reported_type_of_use"/>
        <result property="typeOfUse" column="scenario_detail_type_of_use"/>
        <collection property="scenarioShareDetails" javaType="java.util.List" ofType="com.copyright.rup.dist.foreign.domain.AclScenarioShareDetail">
            <result property="rhAccountNumber" column="rh_account_number"/>
            <result property="payeeAccountNumber" column="payee_account_number"/>
            <result property="typeOfUse" column="type_of_use"/>
            <result property="volumeWeight" column="volume_weight"/>
            <result property="valueWeight" column="value_weight"/>
            <result property="valueShare" column="value_share"/>
            <result property="volumeShare" column="volume_share"/>
            <result property="detailShare" column="detail_share"/>
            <result property="volumeWeightDenominator" column="volume_weight_denominator"/>
            <result property="valueWeightDenominator" column="value_weight_denominator"/>
            <result property="netAmount" column="net_amount"/>
            <result property="grossAmount" column="gross_amount"/>
            <result property="serviceFeeAmount" column="service_fee_amount"/>
        </collection>
    </resultMap>

    <resultMap id="archivedScenarioLiabilitiesResultMap" type="AclScenarioLiabilityDetail">
        <result property="liabilityDetailId" column="df_acl_share_detail_archived_uid"/>
        <result property="rightsholderId" column="rh_id"/>
        <result property="wrWrkInst" column="wr_wrk_inst"/>
        <result property="systemTitle" column="system_title"/>
        <result property="typeOfUse" column="type_of_use"/>
        <result property="licenseType" column="license_type"/>
        <result property="aggregateLicenseeClassName" column="detail_licensee_class_name"/>
        <result property="productFamily" column="product_family"/>
        <result property="netAmount" column="net_amount"/>
        <result property="serviceFeeAmount" column="service_fee_amount"/>
        <result property="grossAmount" column="gross_amount"/>
    </resultMap>

    <select id="copyScenarioDetailsToArchiveByScenarioId" parameterType="map" resultType="string">
        insert into ${schema}.df_acl_scenario_detail_archived (
            df_acl_scenario_detail_archived_uid,
            df_acl_scenario_uid,
            period_end_date,
            original_detail_id,
            wr_wrk_inst,
            system_title,
            detail_licensee_class_id,
            publication_type_uid,
            pub_type_weight,
            content_unit_price,
            number_of_copies,
            usage_age_weight,
            weighted_copies,
            survey_country,
            reported_type_of_use,
            type_of_use,
            content_unit_price_flag,
            price,
            price_flag,
            content,
            content_flag,
            <include refid="StoredEntityMapper.additionalColumns"/>
        )
        select
            df_acl_scenario_detail_uid,
            df_acl_scenario_uid,
            period_end_date,
            original_detail_id,
            wr_wrk_inst,
            system_title,
            detail_licensee_class_id,
            publication_type_uid,
            pub_type_weight,
            content_unit_price,
            number_of_copies,
            usage_age_weight,
            weighted_copies,
            survey_country,
            reported_type_of_use,
            type_of_use,
            content_unit_price_flag,
            price,
            price_flag,
            content,
            content_flag,
            <include refid="StoredEntityMapper.insert"/>
        from ${schema}.df_acl_scenario_detail
        where df_acl_scenario_uid = #{scenarioId}
        order by df_acl_scenario_detail_uid
        returning df_acl_scenario_detail_archived_uid
    </select>

    <select id="copyScenarioSharesToArchiveByScenarioId" parameterType="map" resultType="string">
        insert into ${schema}.df_acl_share_detail_archived (
            df_acl_share_detail_archived_uid,
            df_acl_scenario_uid,
            df_acl_scenario_detail_archived_uid,
            type_of_use,
            rh_account_number,
            payee_account_number,
            aggregate_licensee_class_id,
            volume_weight,
            value_weight,
            value_weight_denominator,
            volume_weight_denominator,
            value_share,
            volume_share,
            net_amount,
            gross_amount,
            service_fee_amount,
            detail_share,
            <include refid="StoredEntityMapper.additionalColumns"/>
        )
        select
            df_acl_share_detail_uid,
            df_acl_scenario_uid,
            df_acl_scenario_detail_uid,
            type_of_use,
            rh_account_number,
            payee_account_number,
            aggregate_licensee_class_id,
            volume_weight,
            value_weight,
            value_weight_denominator,
            volume_weight_denominator,
            value_share,
            volume_share,
            net_amount,
            gross_amount,
            service_fee_amount,
            detail_share,
            <include refid="StoredEntityMapper.insert"/>
        from ${schema}.df_acl_share_detail
        where df_acl_scenario_uid = #{scenarioId}
        order by df_acl_share_detail_uid
        returning df_acl_share_detail_archived_uid
    </select>

    <select id="findScenarioDetailsByScenarioId" resultMap="aclScenarioDetailArchivedResultMap">
        select
            sda.df_acl_scenario_detail_archived_uid,
            sda.df_acl_scenario_uid,
            period_end_date,
            original_detail_id,
            wr_wrk_inst,
            system_title,
            sda.detail_licensee_class_id,
            dlc.description detail_licensee_class_name,
            slc.aggregate_licensee_class_id,
            alc.description aggregate_licensee_class_name,
            sda.publication_type_uid,
            pub_type_weight,
            price,
            price_flag,
            content,
            content_flag,
            content_unit_price,
            content_unit_price_flag,
            number_of_copies,
            usage_age_weight,
            weighted_copies,
            survey_country,
            reported_type_of_use,
            sda.type_of_use as scenario_detail_type_of_use,
            shda.rh_account_number,
            shda.payee_account_number,
            shda.type_of_use,
            shda.volume_weight,
            shda.value_weight,
            shda.value_share,
            shda.volume_share,
            shda.detail_share,
            shda.volume_weight_denominator,
            shda.value_weight_denominator,
            shda.net_amount,
            shda.gross_amount,
            shda.service_fee_amount
        from ${schema}.df_acl_scenario_detail_archived sda
        left join ${schema}.df_acl_share_detail_archived shda on sda.df_acl_scenario_detail_archived_uid = shda.df_acl_scenario_detail_archived_uid
        join ${schema}.df_acl_scenario_pub_type_weight spt on sda.df_acl_scenario_uid = spt.df_acl_scenario_uid
            and sda.publication_type_uid = spt.df_publication_type_uid
        join ${schema}.df_acl_scenario_licensee_class slc on sda.df_acl_scenario_uid = slc.df_acl_scenario_uid
            and sda.detail_licensee_class_id = slc.detail_licensee_class_id
        join ${schema}.df_detail_licensee_class dlc on slc.detail_licensee_class_id = dlc.detail_licensee_class_id
        join ${schema}.df_aggregate_licensee_class alc on slc.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        where sda.df_acl_scenario_uid = #{scenarioId}
        order by original_detail_id, shda.type_of_use
    </select>

    <select id="findForSendToLmByScenarioId" resultMap="archivedScenarioLiabilitiesResultMap">
        select
            df_acl_share_detail_archived_uid,
            sda.wr_wrk_inst,
            sda.system_title,
            rh.df_rightsholder_uid rh_id,
            shda.type_of_use,
            case when shda.type_of_use = 'DIGITAL' then 'ACLDIGITAL' else 'ACLPRINT' end as product_family,
            s.license_type,
            alc.description detail_licensee_class_name,
            gross_amount,
            service_fee_amount,
            net_amount
        from ${schema}.df_acl_share_detail_archived shda
        left join ${schema}.df_rightsholder rh on rh.rh_account_number = shda.rh_account_number
        join ${schema}.df_acl_scenario_detail_archived sda on shda.df_acl_scenario_detail_archived_uid = sda.df_acl_scenario_detail_archived_uid
        join ${schema}.df_acl_scenario s on shda.df_acl_scenario_uid = s.df_acl_scenario_uid
        join ${schema}.df_aggregate_licensee_class alc on shda.aggregate_licensee_class_id = alc.aggregate_licensee_class_id
        where sda.df_acl_scenario_uid = #{scenarioId}
    </select>

    <select id="findAclRightsholderTotalsHoldersByScenarioId" parameterType="map" resultMap="IAclScenarioUsageMapper.aclRightsholderTotalsHolderResultMap">
        <include refid="IAclScenarioUsageMapper.findAclRightsholderTotalsHoldersByScenarioIdSql">
            <property name="details_table" value="df_acl_scenario_detail_archived"/>
            <property name="shares_table" value="df_acl_share_detail_archived"/>
            <property name="detail_uid_column" value="df_acl_scenario_detail_archived_uid"/>
        </include>
    </select>

    <select id="findWithAmountsAndLastAction" parameterType="string" resultMap="IAclScenarioUsageMapper.aclScenarioDtoResultMap">
        <include refid="IAclScenarioUsageMapper.findWithAmountsAndLastActionSql">
            <property name="details_table" value="df_acl_scenario_detail_archived"/>
            <property name="shares_table" value="df_acl_share_detail_archived"/>
            <property name="detail_uid_column" value="df_acl_scenario_detail_archived_uid"/>
        </include>
    </select>
</mapper>
