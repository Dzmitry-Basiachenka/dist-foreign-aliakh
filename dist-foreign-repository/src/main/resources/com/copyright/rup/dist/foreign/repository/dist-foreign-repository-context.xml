<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <context:component-scan base-package="com.copyright.rup.dist.foreign.repository"/>

    <bean id="dfDataSource" class="com.copyright.rup.common.config.db.RupBasicDataSource"
          destroy-method="close"
          p:driverClassName="org.postgresql.Driver"
          p:url="$RUP{dist.foreign.database.url}"
          p:username="$RUP{dist.foreign.database.username}"
          p:password="$RUP{dist.foreign.database.password}"
          p:connectionProperties="ApplicationName=#{T(com.copyright.rup.common.app.RupAppUtils).getApplicationIdentifier()};"
          p:initialSize="$RUP{dist.foreign.database.pool.initial.size}"
          p:maxActive="$RUP{dist.foreign.database.pool.max.active.size}"
          p:maxIdle="$RUP{dist.foreign.database.pool.max.idle.size}"
          p:minIdle="$RUP{dist.foreign.database.pool.min.idle.size}"
          p:maxWait="$RUP{dist.foreign.database.timeout}"
          p:validationQuery="$RUP{dist.foreign.database.pool.validation.query.sql}"
          p:validationQueryTimeout="$RUP{dist.foreign.database.pool.validation.query.timeout}"
          p:testOnBorrow="$RUP{dist.foreign.database.pool.validation.query.run}"
          p:testOnReturn="$RUP{dist.foreign.database.pool.validation.query.run.onreturn}"
          p:testWhileIdle="$RUP{dist.foreign.database.pool.validation.query.run.whileidle}"
          p:timeBetweenEvictionRunsMillis="$RUP{dist.foreign.database.pool.eviction.run.time}"
          p:numTestsPerEvictionRun="$RUP{dist.foreign.database.pool.eviction.connection.number}"
          p:minEvictableIdleTimeMillis="$RUP{dist.foreign.database.pool.eviction.min.idle.time}"
          p:poolPreparedStatements="$RUP{dist.foreign.database.pool.pool.prepared.statements}"
          p:maxOpenPreparedStatements="$RUP{dist.foreign.database.pool.max.open.prepared.statements}"
          p:removeAbandoned="$RUP{dist.foreign.database.pool.remove.abandoned}"
          p:removeAbandonedTimeout="$RUP{dist.foreign.database.pool.remove.abandoned.timeout}"
          p:logAbandoned="$RUP{dist.foreign.database.pool.log.abandoned}"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dfDataSource"/>
    </bean>

    <tx:annotation-driven/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dfDataSource"/>
        <property name="configLocation"
                  value="classpath:com/copyright/rup/dist/foreign/repository/dist-foreign-mybatis-config.xml"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="BATCH"/>
    </bean>

    <bean id="dfDataSource.exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
        <property name="beans">
            <map>
                <entry key="com.copyright.rup.dist.foreign:name=dfDataSource" value-ref="dfDataSource"/>
            </map>
        </property>
    </bean>
</beans>
