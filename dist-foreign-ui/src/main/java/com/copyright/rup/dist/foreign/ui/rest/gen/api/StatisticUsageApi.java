/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.copyright.rup.dist.foreign.ui.rest.gen.api;

import com.copyright.rup.dist.foreign.ui.rest.gen.model.Error;
import com.copyright.rup.dist.foreign.ui.rest.gen.model.UsageStat;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Validated
@Api(tags = {"StatisticUsage"})
public interface StatisticUsageApi {
        StatisticUsageApiDelegate getDelegate();

    @ApiOperation(value = "Gets usage statistic", nickname = "getUsageStatistic", notes = "Gets usage statistic", response = UsageStat.class, tags={ "statistic, usage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Usage statistic", response = UsageStat.class),
        @ApiResponse(code = 404, message = "Usage not found by id. Error code [NOT_FOUND]", response = Error.class),
        @ApiResponse(code = 500, message = "Unexpected error. Error code [INTERNAL_SERVER_ERROR]", response = Error.class) })
    @RequestMapping(value = "/statistic/usage/{usageId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<UsageStat> getUsageStatistic(@ApiParam(value = "Usage id",required=true) @PathVariable("usageId") String usageId) {
        return getDelegate().getUsageStatistic(usageId);
    }

}
