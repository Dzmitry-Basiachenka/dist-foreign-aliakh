apply plugin: 'rup-tomcat'
apply plugin: 'rup-war'

if (!project.plugins.findPlugin(com.devsoap.plugin.GradleVaadinPlugin)) {
    project.apply(plugin: com.devsoap.plugin.GradleVaadinPlugin)
}

rupTomcat {
    tomcatVersion = "${embeddedTomcatVersion}"
}

configurations {
    'vaadin-theme-compiler' {
        exclude group: 'com.vaadin', module: 'vaadin-sass-compiler'
    }
}

vaadin {
    version = "${vaadinVersion}"
    manageDependencies = true
    manageRepositories = false
}

dependencies {
    compile project(':dist-foreign-domain')
    compile project(':dist-foreign-service')

    compile("com.copyright.rup.vaadin:rup-vaadin-core:${rupVaadinVersion}")
    compile("com.copyright.rup.vaadin:rup-vaadin-theme:${rupVaadinVersion}")
    compile("com.copyright.rup.dist.common:dist-common-reporting:${distCommonVersion}") {
        exclude group: 'net.sf.jasperreports'
    }
    compile("com.vaadin:vaadin-spring:${vaadinSpringVersion}")
    compile("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")
    compile("io.swagger:swagger-annotations:${swaggerAnnotationsVersion}")
    compile("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    compile("org.springframework:spring-webmvc:${rupJava.standardDependencies.spring.version}")
    compile("org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}")

    runtime("com.copyright.rup.common:rup-common-web:${rupCommonVersion}")
    runtime("com.copyright.rup.dist.common:dist-common-web:${distCommonVersion}")
    runtime("com.copyright.rup.security.auth:rup-auth-consumer:${rupAuthVersion}")
    runtime("org.codehaus.janino:janino:${janinoVersion}")

    testCompile("com.copyright.rup.dist.common:dist-common-test:${distCommonVersion}") {
        exclude group: 'com.copyright.rup.aws', module: 'rup-aws-sqs'
        exclude group: 'com.copyright.rup.aws', module: 'rup-aws-sns'
        exclude group: 'org.apache.camel'
    }
    testCompile("org.apache.commons:commons-text:${commonsTextVersion}")

    testIntegRuntime("com.jayway.jsonpath:json-path:${jsonPathVersion}")
    testIntegRuntime("org.skyscreamer:jsonassert:${jsonassertVersion}")
}

war {
    dependsOn 'vaadinThemeCompile'
    exclude '**/*.scss'
}

tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors()
}
