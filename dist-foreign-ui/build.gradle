import fi.jasoft.plugin.GradleVaadinPlugin
import fi.jasoft.plugin.tasks.CompileThemeTask

apply plugin: 'rup-war-ui'

if (!project.plugins.findPlugin(GradleVaadinPlugin)) {
    project.apply(plugin: GradleVaadinPlugin)
}

rupTomcat {
    tomcatVersion = "${embeddedTomcatVersion}"
}

vaadin {
    version = "${vaadinVersion}"
    manageDependencies = false
    manageRepositories = false
}

dependencies {
    compile project(':dist-foreign-domain')
    compile project(':dist-foreign-service')

    compile("com.copyright.rup.vaadin:rup-vaadin-core:${rupVaadinVersion}")
    compile("com.copyright.rup.vaadin:rup-vaadin-theme:${rupVaadinVersion}")
    compile("com.vaadin:vaadin-spring:${vaadinSpringVersion}")

    runtime("com.copyright.rup.common:rup-common-web:${rupCommonVersion}")
    runtime("com.copyright.rup.dist.common:dist-common-web:${distCommonVersion}")
    runtime("com.copyright.rup.security.auth:rup-auth-consumer:${rupAuthVersion}")
    runtime("com.vaadin:vaadin-push:${vaadinVersion}")
    runtime("org.codehaus.janino:janino:${janinoVersion}")
    runtime("org.springframework.security:spring-security-core:${springSecurityVersion}")

    testCompile("com.copyright.rup.dist.common:dist-common-test:${distCommonVersion}")
    testCompile("org.apache.commons:commons-text:${commonsTextVersion}")

    testRuntime("cglib:cglib-nodep:${cglibNodepVersion}")
}

task compileVaadinTheme(type: CompileThemeTask, group: "rupVaadin")

war {
    dependsOn 'compileVaadinTheme'
    exclude '**/*.scss'
}

def localAwsPrefix = "lm-pdev-local"

afterEvaluate {

    tomcatRun.doFirst {
        if ("LOCAL".equals(System.getProperty("rup.environment"))) {
            systemProperty("dist.foreign.aws.service.environment.prefix", localAwsPrefix)
            println "Change dist.foreign.aws.service.environment.prefix to ${localAwsPrefix}"
        }
    }
    tomcatRunDebug.doFirst {
        if ("LOCAL".equals(System.getProperty("rup.environment"))) {
            systemProperty "dist.foreign.aws.service.environment.prefix", localAwsPrefix
            println "Change dist.foreign.aws.service.environment.prefix to ${localAwsPrefix}"
        }
    }

    appBeforeIntegrationTest.doFirst {
        systemProperty "dbPidLocation", "${projectDir}/build/tmp/embeddedPostgres/postgresUi.pid"
    }
}
