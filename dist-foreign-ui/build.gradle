import fi.jasoft.plugin.GradleVaadinPlugin
import fi.jasoft.plugin.tasks.CompileThemeTask
import com.copyright.rup.scm.gradle.plugins.PluginUtils

apply plugin: 'rup-war-ui'

if (!project.plugins.findPlugin(GradleVaadinPlugin)) {
    project.apply(plugin: GradleVaadinPlugin)
}

rupTomcat {
    tomcatVersion = "${embeddedTomcatVersion}"
}

vaadin {
    version = "${vaadinVersion}"
    manageDependencies = false
    manageRepositories = false
}

dependencies {
    compile project(':dist-foreign-domain')
    compile project(':dist-foreign-service')

    compile("com.copyright.rup.vaadin:rup-vaadin-core:${rupVaadinVersion}")
    compile("com.copyright.rup.vaadin:rup-vaadin-theme:${rupVaadinVersion}")
    compile("com.vaadin:vaadin-spring:${vaadinSpringVersion}")
    compile("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")
    compile("io.swagger:swagger-annotations:${swaggerAnnotationsVersion}")
    compile("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    compile("org.springframework:spring-webmvc:${rupJava.standardDependencies.spring.version}")

    runtime("com.copyright.rup.common:rup-common-web:${rupCommonVersion}")
    runtime("com.copyright.rup.dist.common:dist-common-web:${distCommonVersion}") {
        exclude group: "org.apache.activemq"
    }
    runtime("com.copyright.rup.security.auth:rup-auth-consumer:${rupAuthVersion}")
    runtime("com.vaadin:vaadin-push:${vaadinVersion}")
    runtime("org.codehaus.janino:janino:${janinoVersion}")
    runtime("org.springframework.security:spring-security-core:${springSecurityVersion}")

    testCompile("com.copyright.rup.dist.common:dist-common-test:${distCommonVersion}"){
        exclude group: "org.apache.activemq"
    }
    testCompile("org.apache.commons:commons-text:${commonsTextVersion}")

    testRuntime("cglib:cglib-nodep:${cglibNodepVersion}")

    testIntegRuntime("com.jayway.jsonpath:json-path:${jsonPathVersion}")
    testIntegRuntime("org.skyscreamer:jsonassert:${jsonassertVersion}")
}

task compileVaadinTheme(type: CompileThemeTask, group: "rupVaadin")

war {
    dependsOn 'compileVaadinTheme'
    exclude '**/*.scss'
}

afterEvaluate {

    appBeforeIntegrationTest.doFirst {
        systemProperty "dbPidLocation", "${projectDir}/build/tmp/embeddedPostgres/postgresUi.pid"
    }
}
